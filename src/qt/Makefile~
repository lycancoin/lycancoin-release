# Makefile.in generated by automake 1.15 from Makefile.am.
# src/qt/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/lycancoin
pkgincludedir = $(includedir)/lycancoin
pkglibdir = $(libdir)/lycancoin
pkglibexecdir = $(libexecdir)/lycancoin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = bitcoin-qt$(EXEEXT)
#am__append_1 = $(BITCOIN_MM)
#am__append_2 = $(BITCOIN_RC)
subdir = src/qt
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/src/m4/ax_boost_base.m4 \
	$(top_srcdir)/src/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/src/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/src/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/src/m4/ax_boost_system.m4 \
	$(top_srcdir)/src/m4/ax_boost_thread.m4 \
	$(top_srcdir)/src/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/src/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/src/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/src/m4/ax_pthread.m4 \
	$(top_srcdir)/src/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/src/m4/bitcoin_qt.m4 \
	$(top_srcdir)/src/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbitcoinqt_a_AR = $(AR) $(ARFLAGS)
libbitcoinqt_a_LIBADD =
am__libbitcoinqt_a_SOURCES_DIST = aboutdialog.cpp addressbookpage.cpp \
	addresstablemodel.cpp askpassphrasedialog.cpp \
	bitcoinaddressvalidator.cpp bitcoinamountfield.cpp bitcoin.cpp \
	bitcoingui.cpp bitcoinunits.cpp clientmodel.cpp \
	coincontroldialog.cpp coincontroltreewidget.cpp \
	csvmodelwriter.cpp editaddressdialog.cpp guiutil.cpp intro.cpp \
	monitoreddatamapper.cpp notificator.cpp openuridialog.cpp \
	optionsdialog.cpp optionsmodel.cpp overviewpage.cpp \
	paymentrequestplus.cpp paymentserver.cpp \
	qvalidatedlineedit.cpp qvaluecombobox.cpp \
	receivecoinsdialog.cpp receiverequestdialog.cpp rpcconsole.cpp \
	sendcoinsdialog.cpp sendcoinsentry.cpp \
	signverifymessagedialog.cpp splashscreen.cpp \
	trafficgraphwidget.cpp transactiondesc.cpp \
	transactiondescdialog.cpp transactionfilterproxy.cpp \
	transactionrecord.cpp transactiontablemodel.cpp \
	transactionview.cpp walletframe.cpp walletmodel.cpp \
	walletmodeltransaction.cpp walletview.cpp aboutdialog.h \
	addressbookpage.h addresstablemodel.h askpassphrasedialog.h \
	bitcoinaddressvalidator.h bitcoinamountfield.h bitcoingui.h \
	bitcoinunits.h clientmodel.h coincontroldialog.h \
	coincontroltreewidget.h csvmodelwriter.h editaddressdialog.h \
	guiconstants.h guiutil.h intro.h macdockiconhandler.h \
	macnotificationhandler.h monitoreddatamapper.h notificator.h \
	openuridialog.h optionsdialog.h optionsmodel.h overviewpage.h \
	paymentrequestplus.h paymentserver.h receivecoinsdialog.h \
	receiverequestdialog.h qvalidatedlineedit.h qvaluecombobox.h \
	rpcconsole.h sendcoinsdialog.h sendcoinsentry.h \
	signverifymessagedialog.h splashscreen.h trafficgraphwidget.h \
	transactiondescdialog.h transactiondesc.h \
	transactionfilterproxy.h transactionrecord.h \
	transactiontablemodel.h transactionview.h walletframe.h \
	walletmodel.h walletmodeltransaction.h walletview.h \
	forms/aboutdialog.ui forms/addressbookpage.ui \
	forms/askpassphrasedialog.ui forms/coincontroldialog.ui \
	forms/editaddressdialog.ui forms/intro.ui \
	forms/openuridialog.ui forms/optionsdialog.ui \
	forms/overviewpage.ui forms/receiverequestdialog.ui \
	forms/receivecoinsdialog.ui forms/rpcconsole.ui \
	forms/sendcoinsdialog.ui forms/sendcoinsentry.ui \
	forms/signverifymessagedialog.ui \
	forms/transactiondescdialog.ui bitcoin.qrc \
	locale/bitcoin_ach.ts locale/bitcoin_af_ZA.ts \
	locale/bitcoin_ar.ts locale/bitcoin_be_BY.ts \
	locale/bitcoin_bg.ts locale/bitcoin_bs.ts \
	locale/bitcoin_ca_ES.ts locale/bitcoin_ca.ts \
	locale/bitcoin_cs.ts locale/bitcoin_cy.ts locale/bitcoin_da.ts \
	locale/bitcoin_de.ts locale/bitcoin_el_GR.ts \
	locale/bitcoin_en.ts locale/bitcoin_eo.ts \
	locale/bitcoin_es_CL.ts locale/bitcoin_es.ts \
	locale/bitcoin_et.ts locale/bitcoin_eu_ES.ts \
	locale/bitcoin_fa_IR.ts locale/bitcoin_fa.ts \
	locale/bitcoin_fi.ts locale/bitcoin_fr_CA.ts \
	locale/bitcoin_fr.ts locale/bitcoin_gu_IN.ts \
	locale/bitcoin_he.ts locale/bitcoin_hi_IN.ts \
	locale/bitcoin_hr.ts locale/bitcoin_hu.ts \
	locale/bitcoin_id_ID.ts locale/bitcoin_it.ts \
	locale/bitcoin_ja.ts locale/bitcoin_kk_KZ.ts \
	locale/bitcoin_ko_KR.ts locale/bitcoin_la.ts \
	locale/bitcoin_lt.ts locale/bitcoin_lv_LV.ts \
	locale/bitcoin_ms_MY.ts locale/bitcoin_nb.ts \
	locale/bitcoin_nl.ts locale/bitcoin_pl.ts \
	locale/bitcoin_pt_BR.ts locale/bitcoin_pt_PT.ts \
	locale/bitcoin_ro_RO.ts locale/bitcoin_ru.ts \
	locale/bitcoin_sk.ts locale/bitcoin_sq.ts locale/bitcoin_sr.ts \
	locale/bitcoin_sv.ts locale/bitcoin_th_TH.ts \
	locale/bitcoin_tr.ts locale/bitcoin_uk.ts locale/bitcoin_vi.ts \
	locale/bitcoin_vi_VN.ts locale/bitcoin_zh_CN.ts \
	locale/bitcoin_zh_TW.ts paymentrequest.proto \
	res/icons/bitcoin.png res/icons/address-book.png \
	res/icons/quit.png res/icons/send.png res/icons/toolbar.png \
	res/icons/connect0_16.png res/icons/connect1_16.png \
	res/icons/connect2_16.png res/icons/connect3_16.png \
	res/icons/connect4_16.png res/icons/transaction0.png \
	res/icons/transaction2.png res/icons/clock1.png \
	res/icons/clock2.png res/icons/clock3.png res/icons/clock4.png \
	res/icons/clock5.png res/icons/configure.png \
	res/icons/receive.png res/icons/editpaste.png \
	res/icons/editcopy.png res/icons/add.png \
	res/icons/bitcoin_testnet.png res/icons/toolbar_testnet.png \
	res/icons/edit.png res/icons/history.png \
	res/icons/overview.png res/icons/export.png \
	res/icons/synced.png res/icons/remove.png \
	res/icons/tx_mined.png res/icons/tx_input.png \
	res/icons/tx_output.png res/icons/tx_inout.png \
	res/icons/lock_closed.png res/icons/lock_open.png \
	res/icons/key.png res/icons/filesave.png res/icons/qrcode.png \
	res/icons/debugwindow.png res/icons/bitcoin.ico \
	res/icons/bitcoin_testnet.ico res/images/about.png \
	res/images/splash.png res/images/splash_testnet.png \
	res/movies/update_spinner.mng macdockiconhandler.mm \
	macnotificationhandler.mm res/bitcoin-qt-res.rc
am__objects_1 = libbitcoinqt_a-aboutdialog.$(OBJEXT) \
	libbitcoinqt_a-addressbookpage.$(OBJEXT) \
	libbitcoinqt_a-addresstablemodel.$(OBJEXT) \
	libbitcoinqt_a-askpassphrasedialog.$(OBJEXT) \
	libbitcoinqt_a-bitcoinaddressvalidator.$(OBJEXT) \
	libbitcoinqt_a-bitcoinamountfield.$(OBJEXT) \
	libbitcoinqt_a-bitcoin.$(OBJEXT) \
	libbitcoinqt_a-bitcoingui.$(OBJEXT) \
	libbitcoinqt_a-bitcoinunits.$(OBJEXT) \
	libbitcoinqt_a-clientmodel.$(OBJEXT) \
	libbitcoinqt_a-coincontroldialog.$(OBJEXT) \
	libbitcoinqt_a-coincontroltreewidget.$(OBJEXT) \
	libbitcoinqt_a-csvmodelwriter.$(OBJEXT) \
	libbitcoinqt_a-editaddressdialog.$(OBJEXT) \
	libbitcoinqt_a-guiutil.$(OBJEXT) \
	libbitcoinqt_a-intro.$(OBJEXT) \
	libbitcoinqt_a-monitoreddatamapper.$(OBJEXT) \
	libbitcoinqt_a-notificator.$(OBJEXT) \
	libbitcoinqt_a-openuridialog.$(OBJEXT) \
	libbitcoinqt_a-optionsdialog.$(OBJEXT) \
	libbitcoinqt_a-optionsmodel.$(OBJEXT) \
	libbitcoinqt_a-overviewpage.$(OBJEXT) \
	libbitcoinqt_a-paymentrequestplus.$(OBJEXT) \
	libbitcoinqt_a-paymentserver.$(OBJEXT) \
	libbitcoinqt_a-qvalidatedlineedit.$(OBJEXT) \
	libbitcoinqt_a-qvaluecombobox.$(OBJEXT) \
	libbitcoinqt_a-receivecoinsdialog.$(OBJEXT) \
	libbitcoinqt_a-receiverequestdialog.$(OBJEXT) \
	libbitcoinqt_a-rpcconsole.$(OBJEXT) \
	libbitcoinqt_a-sendcoinsdialog.$(OBJEXT) \
	libbitcoinqt_a-sendcoinsentry.$(OBJEXT) \
	libbitcoinqt_a-signverifymessagedialog.$(OBJEXT) \
	libbitcoinqt_a-splashscreen.$(OBJEXT) \
	libbitcoinqt_a-trafficgraphwidget.$(OBJEXT) \
	libbitcoinqt_a-transactiondesc.$(OBJEXT) \
	libbitcoinqt_a-transactiondescdialog.$(OBJEXT) \
	libbitcoinqt_a-transactionfilterproxy.$(OBJEXT) \
	libbitcoinqt_a-transactionrecord.$(OBJEXT) \
	libbitcoinqt_a-transactiontablemodel.$(OBJEXT) \
	libbitcoinqt_a-transactionview.$(OBJEXT) \
	libbitcoinqt_a-walletframe.$(OBJEXT) \
	libbitcoinqt_a-walletmodel.$(OBJEXT) \
	libbitcoinqt_a-walletmodeltransaction.$(OBJEXT) \
	libbitcoinqt_a-walletview.$(OBJEXT)
am__objects_2 =
am__objects_3 = libbitcoinqt_a-macdockiconhandler.$(OBJEXT) \
	libbitcoinqt_a-macnotificationhandler.$(OBJEXT)
#am__objects_4 = $(am__objects_3)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_5 = res/bitcoin-qt-res.$(OBJEXT)
#am__objects_6 = $(am__objects_5)
am_libbitcoinqt_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_2) $(am__objects_2) $(am__objects_2) \
	$(am__objects_2) $(am__objects_2) $(am__objects_2) \
	$(am__objects_2) $(am__objects_4) $(am__objects_6)
am__objects_7 = libbitcoinqt_a-moc_aboutdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_addressbookpage.$(OBJEXT) \
	libbitcoinqt_a-moc_addresstablemodel.$(OBJEXT) \
	libbitcoinqt_a-moc_askpassphrasedialog.$(OBJEXT) \
	libbitcoinqt_a-moc_bitcoinaddressvalidator.$(OBJEXT) \
	libbitcoinqt_a-moc_bitcoinamountfield.$(OBJEXT) \
	libbitcoinqt_a-moc_bitcoingui.$(OBJEXT) \
	libbitcoinqt_a-moc_bitcoinunits.$(OBJEXT) \
	libbitcoinqt_a-moc_clientmodel.$(OBJEXT) \
	libbitcoinqt_a-moc_coincontroldialog.$(OBJEXT) \
	libbitcoinqt_a-moc_coincontroltreewidget.$(OBJEXT) \
	libbitcoinqt_a-moc_csvmodelwriter.$(OBJEXT) \
	libbitcoinqt_a-moc_editaddressdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_guiutil.$(OBJEXT) \
	libbitcoinqt_a-moc_intro.$(OBJEXT) \
	libbitcoinqt_a-moc_macdockiconhandler.$(OBJEXT) \
	libbitcoinqt_a-moc_macnotificationhandler.$(OBJEXT) \
	libbitcoinqt_a-moc_monitoreddatamapper.$(OBJEXT) \
	libbitcoinqt_a-moc_notificator.$(OBJEXT) \
	libbitcoinqt_a-moc_openuridialog.$(OBJEXT) \
	libbitcoinqt_a-moc_optionsdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_optionsmodel.$(OBJEXT) \
	libbitcoinqt_a-moc_overviewpage.$(OBJEXT) \
	libbitcoinqt_a-moc_paymentserver.$(OBJEXT) \
	libbitcoinqt_a-moc_receiverequestdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_qvalidatedlineedit.$(OBJEXT) \
	libbitcoinqt_a-moc_qvaluecombobox.$(OBJEXT) \
	libbitcoinqt_a-moc_receivecoinsdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_rpcconsole.$(OBJEXT) \
	libbitcoinqt_a-moc_sendcoinsdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_sendcoinsentry.$(OBJEXT) \
	libbitcoinqt_a-moc_signverifymessagedialog.$(OBJEXT) \
	libbitcoinqt_a-moc_splashscreen.$(OBJEXT) \
	libbitcoinqt_a-moc_trafficgraphwidget.$(OBJEXT) \
	libbitcoinqt_a-moc_transactiondesc.$(OBJEXT) \
	libbitcoinqt_a-moc_transactiondescdialog.$(OBJEXT) \
	libbitcoinqt_a-moc_transactionfilterproxy.$(OBJEXT) \
	libbitcoinqt_a-moc_transactiontablemodel.$(OBJEXT) \
	libbitcoinqt_a-moc_transactionview.$(OBJEXT) \
	libbitcoinqt_a-moc_walletframe.$(OBJEXT) \
	libbitcoinqt_a-moc_walletmodel.$(OBJEXT) \
	libbitcoinqt_a-moc_walletview.$(OBJEXT)
am__objects_8 = libbitcoinqt_a-paymentrequest.pb.$(OBJEXT)
am__objects_9 = libbitcoinqt_a-qrc_bitcoin.$(OBJEXT)
nodist_libbitcoinqt_a_OBJECTS = $(am__objects_7) $(am__objects_2) \
	$(am__objects_8) $(am__objects_2) $(am__objects_9)
libbitcoinqt_a_OBJECTS = $(am_libbitcoinqt_a_OBJECTS) \
	$(nodist_libbitcoinqt_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_bitcoin_qt_OBJECTS = bitcoin_qt-bitcoin.$(OBJEXT)
bitcoin_qt_OBJECTS = $(am_bitcoin_qt_OBJECTS)
am__DEPENDENCIES_1 =
bitcoin_qt_DEPENDENCIES = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) \
	$(LIBMEMENV) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/src/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_$(V))
am__v_OBJCXX_ = $(am__v_OBJCXX_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_$(V))
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbitcoinqt_a_SOURCES) $(nodist_libbitcoinqt_a_SOURCES) \
	$(bitcoin_qt_SOURCES)
DIST_SOURCES = $(am__libbitcoinqt_a_SOURCES_DIST) \
	$(bitcoin_qt_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/src/Makefile.include \
	$(top_srcdir)/src/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/missing automake-1.15
AWK = mawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu/
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu/ -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
BUILD_QT = qt
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 6
CLIENT_VERSION_IS_RELEASE = false
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 1
CLIENT_VERSION_REVISION = 2
COMPARISON_TOOL_REORG_TESTS = 0
COPYRIGHT_YEAR = 2021
CPP = gcc -E
CPPFLAGS = -I/home/lycan/lycancoin-release/db4/include/ -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS  -D_FORTIFY_SOURCE=2
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fPIE -fno-stack-protector -fstack-protector-all
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GCOV = /usr/bin/gcov
GENHTML = 
GIT = /usr/bin/git
GREP = /bin/grep
HEXDUMP = /usr/bin/hexdump
INCLUDES =  -pthread  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAVA = 
JAVA_COMPARISON_TOOL = 
LCOV = 
LDFLAGS = -Wl,-z,now  -pie
LEVELDB_TARGET_FLAGS = 
LIBOBJS = 
LIBS = -lminiupnpc  -lssl -lcrypto
LRELEASE = /usr/bin/lrelease-qt4
LTLIBOBJS = 
LUPDATE = /usr/bin/lupdate-qt4
MAINT = 
MAKEINFO = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/missing makeinfo
MAKENSIS = 
MKDIR_P = /bin/mkdir -p
MOC = /usr/bin/moc-qt4
MOC_DEFS = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = 
OBJCXX = g++
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter  -Wstack-protector -fPIE -fno-stack-protector -fstack-protector-all
OBJEXT = o
PACKAGE = lycancoin
PACKAGE_BUGREPORT = lycancoin.org
PACKAGE_NAME = Bitcoin
PACKAGE_STRING = Bitcoin 1.1.2
PACKAGE_TARNAME = lycancoin
PACKAGE_URL = 
PACKAGE_VERSION = 1.1.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_CFLAGS = -pthread
PROTOBUF_LIBS = -lprotobuf -pthread -lpthread
PROTOC = /usr/bin/protoc
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
QR_CFLAGS = 
QR_LIBS = -lqrencode
QT_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -I/usr/include/qt4/QtCore
QT_DBUS_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtDBus -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore
QT_DBUS_INCLUDES = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtDBus -I/usr/include/qt4 -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include/qt4/QtCore
QT_DBUS_LIBS = -lQtDBus -lQtXml -lQtCore
QT_INCLUDES = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -I/usr/include/qt4/QtCore
QT_LIBS = -lQtGui -lQtNetwork -lQtCore
QT_SELECT = qt4
QT_TEST_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtTest
QT_TEST_INCLUDES = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtTest
QT_TEST_LIBS = -lQtTest
RANLIB = /usr/bin/ranlib
RCC = /usr/bin/rcc
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSL_CFLAGS = 
SSL_LIBS = -lssl
STRIP = /usr/bin/strip
UIC = /usr/bin/uic-qt4
USE_IPV6 = 
USE_QRCODE = 
USE_UPNP = 
VERSION = 1.1.2
WINDRES = 
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/lycan/lycancoin-release/src/qt
abs_srcdir = /home/lycan/lycancoin-release/src/qt
abs_top_builddir = /home/lycan/lycancoin-release
abs_top_srcdir = /home/lycan/lycancoin-release
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
ac_ct_OBJCXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/lycan/lycancoin-release/src/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = $(INCLUDES) -I$(top_builddir)/src/obj \
	-I$(top_srcdir)/src/leveldb/include $(BDB_CPPFLAGS) \
	$(BOOST_INCLUDES) -I$(top_srcdir)/src -I$(top_builddir)/src/qt \
	-I$(top_builddir)/src/qt/forms $(PROTOBUF_CFLAGS) $(QR_CFLAGS)
AM_LDFLAGS = $(PTHREAD_CFLAGS)
LIBBITCOIN = $(top_builddir)/src/libbitcoin.a
LIBLEVELDB = $(top_builddir)/src/leveldb/libleveldb.a
LIBMEMENV = $(top_builddir)/src/leveldb/libmemenv.a
LIBBITCOINQT = $(top_builddir)/src/qt/libbitcoinqt.a
noinst_LIBRARIES = libbitcoinqt.a
SUBDIRS = $(BUILD_TEST_QT)
DIST_SUBDIRS = test

# lycancoin qt core #
QT_TS = locale/bitcoin_ach.ts locale/bitcoin_af_ZA.ts locale/bitcoin_ar.ts \
  locale/bitcoin_be_BY.ts locale/bitcoin_bg.ts locale/bitcoin_bs.ts \
  locale/bitcoin_ca_ES.ts locale/bitcoin_ca.ts locale/bitcoin_cs.ts \
  locale/bitcoin_cy.ts locale/bitcoin_da.ts locale/bitcoin_de.ts \
  locale/bitcoin_el_GR.ts locale/bitcoin_en.ts locale/bitcoin_eo.ts \
  locale/bitcoin_es_CL.ts locale/bitcoin_es.ts locale/bitcoin_et.ts \
  locale/bitcoin_eu_ES.ts locale/bitcoin_fa_IR.ts locale/bitcoin_fa.ts \
  locale/bitcoin_fi.ts locale/bitcoin_fr_CA.ts locale/bitcoin_fr.ts \
  locale/bitcoin_gu_IN.ts locale/bitcoin_he.ts locale/bitcoin_hi_IN.ts \
  locale/bitcoin_hr.ts locale/bitcoin_hu.ts locale/bitcoin_id_ID.ts \
  locale/bitcoin_it.ts locale/bitcoin_ja.ts locale/bitcoin_kk_KZ.ts \
  locale/bitcoin_ko_KR.ts locale/bitcoin_la.ts locale/bitcoin_lt.ts \
  locale/bitcoin_lv_LV.ts locale/bitcoin_ms_MY.ts locale/bitcoin_nb.ts \
  locale/bitcoin_nl.ts locale/bitcoin_pl.ts locale/bitcoin_pt_BR.ts \
  locale/bitcoin_pt_PT.ts locale/bitcoin_ro_RO.ts locale/bitcoin_ru.ts \
  locale/bitcoin_sk.ts locale/bitcoin_sq.ts locale/bitcoin_sr.ts \
  locale/bitcoin_sv.ts locale/bitcoin_th_TH.ts locale/bitcoin_tr.ts \
  locale/bitcoin_uk.ts locale/bitcoin_vi.ts locale/bitcoin_vi_VN.ts \
  locale/bitcoin_zh_CN.ts locale/bitcoin_zh_TW.ts

QT_FORMS_UI = forms/aboutdialog.ui forms/addressbookpage.ui \
  forms/askpassphrasedialog.ui \
  forms/coincontroldialog.ui \
  forms/editaddressdialog.ui \
  forms/intro.ui \
  forms/openuridialog.ui \
  forms/optionsdialog.ui forms/overviewpage.ui forms/receiverequestdialog.ui \
  forms/receivecoinsdialog.ui \
  forms/rpcconsole.ui forms/sendcoinsdialog.ui forms/sendcoinsentry.ui \
  forms/signverifymessagedialog.ui forms/transactiondescdialog.ui

QT_MOC_CPP = moc_aboutdialog.cpp moc_addressbookpage.cpp \
  moc_addresstablemodel.cpp moc_askpassphrasedialog.cpp \
  moc_bitcoinaddressvalidator.cpp moc_bitcoinamountfield.cpp \
  moc_bitcoingui.cpp moc_bitcoinunits.cpp moc_clientmodel.cpp \
  moc_coincontroldialog.cpp \
  moc_coincontroltreewidget.cpp \
  moc_csvmodelwriter.cpp moc_editaddressdialog.cpp moc_guiutil.cpp \
  moc_intro.cpp moc_macdockiconhandler.cpp moc_macnotificationhandler.cpp \
  moc_monitoreddatamapper.cpp moc_notificator.cpp \
  moc_openuridialog.cpp \
  moc_optionsdialog.cpp \
  moc_optionsmodel.cpp moc_overviewpage.cpp moc_paymentserver.cpp \
  moc_receiverequestdialog.cpp moc_qvalidatedlineedit.cpp moc_qvaluecombobox.cpp \
  moc_receivecoinsdialog.cpp \
  moc_rpcconsole.cpp moc_sendcoinsdialog.cpp moc_sendcoinsentry.cpp \
  moc_signverifymessagedialog.cpp moc_splashscreen.cpp moc_trafficgraphwidget.cpp moc_transactiondesc.cpp \
  moc_transactiondescdialog.cpp moc_transactionfilterproxy.cpp \
  moc_transactiontablemodel.cpp moc_transactionview.cpp moc_walletframe.cpp \
  moc_walletmodel.cpp moc_walletview.cpp

BITCOIN_MM = macdockiconhandler.mm macnotificationhandler.mm
QT_MOC = intro.moc overviewpage.moc rpcconsole.moc
QT_QRC_CPP = qrc_bitcoin.cpp
QT_QRC = bitcoin.qrc
PROTOBUF_CC = paymentrequest.pb.cc
PROTOBUF_H = paymentrequest.pb.h
PROTOBUF_PROTO = paymentrequest.proto
BITCOIN_QT_H = aboutdialog.h addressbookpage.h addresstablemodel.h \
  askpassphrasedialog.h bitcoinaddressvalidator.h bitcoinamountfield.h \
  bitcoingui.h bitcoinunits.h clientmodel.h coincontroldialog.h coincontroltreewidget.h csvmodelwriter.h \
  editaddressdialog.h guiconstants.h guiutil.h intro.h macdockiconhandler.h \
  macnotificationhandler.h monitoreddatamapper.h notificator.h \
  openuridialog.h \
  optionsdialog.h \
  optionsmodel.h overviewpage.h paymentrequestplus.h paymentserver.h \
  receivecoinsdialog.h \
  receiverequestdialog.h qvalidatedlineedit.h qvaluecombobox.h rpcconsole.h \
  sendcoinsdialog.h sendcoinsentry.h signverifymessagedialog.h splashscreen.h \
  trafficgraphwidget.h transactiondescdialog.h transactiondesc.h transactionfilterproxy.h \
  transactionrecord.h transactiontablemodel.h transactionview.h walletframe.h \
  walletmodel.h walletmodeltransaction.h walletview.h

RES_ICONS = res/icons/bitcoin.png res/icons/address-book.png \
  res/icons/quit.png res/icons/send.png res/icons/toolbar.png \
  res/icons/connect0_16.png res/icons/connect1_16.png \
  res/icons/connect2_16.png res/icons/connect3_16.png \
  res/icons/connect4_16.png res/icons/transaction0.png \
  res/icons/transaction2.png res/icons/clock1.png res/icons/clock2.png \
  res/icons/clock3.png res/icons/clock4.png res/icons/clock5.png \
  res/icons/configure.png res/icons/receive.png res/icons/editpaste.png \
  res/icons/editcopy.png res/icons/add.png res/icons/bitcoin_testnet.png \
  res/icons/toolbar_testnet.png res/icons/edit.png res/icons/history.png \
  res/icons/overview.png res/icons/export.png res/icons/synced.png \
  res/icons/remove.png res/icons/tx_mined.png res/icons/tx_input.png \
  res/icons/tx_output.png res/icons/tx_inout.png res/icons/lock_closed.png \
  res/icons/lock_open.png res/icons/key.png res/icons/filesave.png \
  res/icons/qrcode.png res/icons/debugwindow.png res/icons/bitcoin.ico \
  res/icons/bitcoin_testnet.ico

BITCOIN_QT_CPP = aboutdialog.cpp addressbookpage.cpp \
  addresstablemodel.cpp askpassphrasedialog.cpp bitcoinaddressvalidator.cpp \
  bitcoinamountfield.cpp bitcoin.cpp bitcoingui.cpp \
  bitcoinunits.cpp clientmodel.cpp \
  coincontroldialog.cpp \
  coincontroltreewidget.cpp \
  csvmodelwriter.cpp editaddressdialog.cpp \
  guiutil.cpp intro.cpp monitoreddatamapper.cpp notificator.cpp \
  openuridialog.cpp \
  optionsdialog.cpp optionsmodel.cpp overviewpage.cpp paymentrequestplus.cpp \
  paymentserver.cpp qvalidatedlineedit.cpp qvaluecombobox.cpp \
  receivecoinsdialog.cpp receiverequestdialog.cpp \
  rpcconsole.cpp sendcoinsdialog.cpp sendcoinsentry.cpp \
  signverifymessagedialog.cpp splashscreen.cpp trafficgraphwidget.cpp transactiondesc.cpp \
  transactiondescdialog.cpp transactionfilterproxy.cpp transactionrecord.cpp \
  transactiontablemodel.cpp transactionview.cpp walletframe.cpp \
  walletmodel.cpp walletmodeltransaction.cpp walletview.cpp

RES_IMAGES = res/images/about.png res/images/splash.png \
  res/images/splash_testnet.png

RES_MOVIES = res/movies/update_spinner.mng
BITCOIN_RC = res/bitcoin-qt-res.rc
libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \
  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)

libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) \
	$(QT_FORMS_UI) $(QT_QRC) $(QT_TS) $(PROTOBUF_PROTO) \
	$(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(am__append_1) \
	$(am__append_2)
nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \
  $(PROTOBUF_H) $(QT_QRC_CPP)

BUILT_SOURCES = $(nodist_libbitcoinqt_a_SOURCES)
#

# lycancoin-qt binary #
bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \
  -I$(top_srcdir)/src/qt/forms

bitcoin_qt_SOURCES = bitcoin.cpp
bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN) $(LIBLEVELDB) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)


# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H = $(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

#locale/foo.ts -> locale/foo.qm
QT_QM = $(QT_TS:.ts=.qm)
CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .mm .o .obj .rc
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/qt/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/qt/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/src/Makefile.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
res/$(am__dirstamp):
	@$(MKDIR_P) res
	@: > res/$(am__dirstamp)
res/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) res/$(DEPDIR)
	@: > res/$(DEPDIR)/$(am__dirstamp)
res/bitcoin-qt-res.$(OBJEXT): res/$(am__dirstamp) \
	res/$(DEPDIR)/$(am__dirstamp)

libbitcoinqt.a: $(libbitcoinqt_a_OBJECTS) $(libbitcoinqt_a_DEPENDENCIES) $(EXTRA_libbitcoinqt_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoinqt.a
	$(AM_V_AR)$(libbitcoinqt_a_AR) libbitcoinqt.a $(libbitcoinqt_a_OBJECTS) $(libbitcoinqt_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoinqt.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

bitcoin-qt$(EXEEXT): $(bitcoin_qt_OBJECTS) $(bitcoin_qt_DEPENDENCIES) $(EXTRA_bitcoin_qt_DEPENDENCIES) 
	@rm -f bitcoin-qt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bitcoin_qt_OBJECTS) $(bitcoin_qt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f res/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bitcoin_qt-bitcoin.Po
include ./$(DEPDIR)/libbitcoinqt_a-aboutdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-addressbookpage.Po
include ./$(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-bitcoin.Po
include ./$(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po
include ./$(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po
include ./$(DEPDIR)/libbitcoinqt_a-bitcoingui.Po
include ./$(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po
include ./$(DEPDIR)/libbitcoinqt_a-clientmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po
include ./$(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po
include ./$(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-guiutil.Po
include ./$(DEPDIR)/libbitcoinqt_a-intro.Po
include ./$(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Po
include ./$(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_intro.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_notificator.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_walletframe.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-moc_walletview.Po
include ./$(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po
include ./$(DEPDIR)/libbitcoinqt_a-notificator.Po
include ./$(DEPDIR)/libbitcoinqt_a-openuridialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-optionsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-optionsmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-overviewpage.Po
include ./$(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Po
include ./$(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Po
include ./$(DEPDIR)/libbitcoinqt_a-paymentserver.Po
include ./$(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po
include ./$(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po
include ./$(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po
include ./$(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-rpcconsole.Po
include ./$(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po
include ./$(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-splashscreen.Po
include ./$(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactiondesc.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactionrecord.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-transactionview.Po
include ./$(DEPDIR)/libbitcoinqt_a-walletframe.Po
include ./$(DEPDIR)/libbitcoinqt_a-walletmodel.Po
include ./$(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Po
include ./$(DEPDIR)/libbitcoinqt_a-walletview.Po

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libbitcoinqt_a-aboutdialog.o: aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-aboutdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo -c -o libbitcoinqt_a-aboutdialog.o `test -f 'aboutdialog.cpp' || echo '$(srcdir)/'`aboutdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo $(DEPDIR)/libbitcoinqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='aboutdialog.cpp' object='libbitcoinqt_a-aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-aboutdialog.o `test -f 'aboutdialog.cpp' || echo '$(srcdir)/'`aboutdialog.cpp

libbitcoinqt_a-aboutdialog.obj: aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-aboutdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo -c -o libbitcoinqt_a-aboutdialog.obj `if test -f 'aboutdialog.cpp'; then $(CYGPATH_W) 'aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-aboutdialog.Tpo $(DEPDIR)/libbitcoinqt_a-aboutdialog.Po
#	$(AM_V_CXX)source='aboutdialog.cpp' object='libbitcoinqt_a-aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-aboutdialog.obj `if test -f 'aboutdialog.cpp'; then $(CYGPATH_W) 'aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/aboutdialog.cpp'; fi`

libbitcoinqt_a-addressbookpage.o: addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-addressbookpage.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo -c -o libbitcoinqt_a-addressbookpage.o `test -f 'addressbookpage.cpp' || echo '$(srcdir)/'`addressbookpage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo $(DEPDIR)/libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='addressbookpage.cpp' object='libbitcoinqt_a-addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-addressbookpage.o `test -f 'addressbookpage.cpp' || echo '$(srcdir)/'`addressbookpage.cpp

libbitcoinqt_a-addressbookpage.obj: addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-addressbookpage.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo -c -o libbitcoinqt_a-addressbookpage.obj `if test -f 'addressbookpage.cpp'; then $(CYGPATH_W) 'addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-addressbookpage.Tpo $(DEPDIR)/libbitcoinqt_a-addressbookpage.Po
#	$(AM_V_CXX)source='addressbookpage.cpp' object='libbitcoinqt_a-addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-addressbookpage.obj `if test -f 'addressbookpage.cpp'; then $(CYGPATH_W) 'addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/addressbookpage.cpp'; fi`

libbitcoinqt_a-addresstablemodel.o: addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-addresstablemodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo -c -o libbitcoinqt_a-addresstablemodel.o `test -f 'addresstablemodel.cpp' || echo '$(srcdir)/'`addresstablemodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='addresstablemodel.cpp' object='libbitcoinqt_a-addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-addresstablemodel.o `test -f 'addresstablemodel.cpp' || echo '$(srcdir)/'`addresstablemodel.cpp

libbitcoinqt_a-addresstablemodel.obj: addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-addresstablemodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo -c -o libbitcoinqt_a-addresstablemodel.obj `if test -f 'addresstablemodel.cpp'; then $(CYGPATH_W) 'addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-addresstablemodel.Po
#	$(AM_V_CXX)source='addresstablemodel.cpp' object='libbitcoinqt_a-addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-addresstablemodel.obj `if test -f 'addresstablemodel.cpp'; then $(CYGPATH_W) 'addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/addresstablemodel.cpp'; fi`

libbitcoinqt_a-askpassphrasedialog.o: askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-askpassphrasedialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo -c -o libbitcoinqt_a-askpassphrasedialog.o `test -f 'askpassphrasedialog.cpp' || echo '$(srcdir)/'`askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='askpassphrasedialog.cpp' object='libbitcoinqt_a-askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-askpassphrasedialog.o `test -f 'askpassphrasedialog.cpp' || echo '$(srcdir)/'`askpassphrasedialog.cpp

libbitcoinqt_a-askpassphrasedialog.obj: askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-askpassphrasedialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo -c -o libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'askpassphrasedialog.cpp'; then $(CYGPATH_W) 'askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Tpo $(DEPDIR)/libbitcoinqt_a-askpassphrasedialog.Po
#	$(AM_V_CXX)source='askpassphrasedialog.cpp' object='libbitcoinqt_a-askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-askpassphrasedialog.obj `if test -f 'askpassphrasedialog.cpp'; then $(CYGPATH_W) 'askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/askpassphrasedialog.cpp'; fi`

libbitcoinqt_a-bitcoinaddressvalidator.o: bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinaddressvalidator.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='bitcoinaddressvalidator.cpp' object='libbitcoinqt_a-bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinaddressvalidator.o `test -f 'bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`bitcoinaddressvalidator.cpp

libbitcoinqt_a-bitcoinaddressvalidator.obj: bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinaddressvalidator.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo -c -o libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='bitcoinaddressvalidator.cpp' object='libbitcoinqt_a-bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinaddressvalidator.obj `if test -f 'bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinaddressvalidator.cpp'; fi`

libbitcoinqt_a-bitcoinamountfield.o: bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinamountfield.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo -c -o libbitcoinqt_a-bitcoinamountfield.o `test -f 'bitcoinamountfield.cpp' || echo '$(srcdir)/'`bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='bitcoinamountfield.cpp' object='libbitcoinqt_a-bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinamountfield.o `test -f 'bitcoinamountfield.cpp' || echo '$(srcdir)/'`bitcoinamountfield.cpp

libbitcoinqt_a-bitcoinamountfield.obj: bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinamountfield.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo -c -o libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'bitcoinamountfield.cpp'; then $(CYGPATH_W) 'bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinamountfield.Po
#	$(AM_V_CXX)source='bitcoinamountfield.cpp' object='libbitcoinqt_a-bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinamountfield.obj `if test -f 'bitcoinamountfield.cpp'; then $(CYGPATH_W) 'bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinamountfield.cpp'; fi`

libbitcoinqt_a-bitcoin.o: bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoin.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo -c -o libbitcoinqt_a-bitcoin.o `test -f 'bitcoin.cpp' || echo '$(srcdir)/'`bitcoin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoin.Po
#	$(AM_V_CXX)source='bitcoin.cpp' object='libbitcoinqt_a-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoin.o `test -f 'bitcoin.cpp' || echo '$(srcdir)/'`bitcoin.cpp

libbitcoinqt_a-bitcoin.obj: bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoin.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo -c -o libbitcoinqt_a-bitcoin.obj `if test -f 'bitcoin.cpp'; then $(CYGPATH_W) 'bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoin.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoin.Po
#	$(AM_V_CXX)source='bitcoin.cpp' object='libbitcoinqt_a-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoin.obj `if test -f 'bitcoin.cpp'; then $(CYGPATH_W) 'bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin.cpp'; fi`

libbitcoinqt_a-bitcoingui.o: bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoingui.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo -c -o libbitcoinqt_a-bitcoingui.o `test -f 'bitcoingui.cpp' || echo '$(srcdir)/'`bitcoingui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='bitcoingui.cpp' object='libbitcoinqt_a-bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoingui.o `test -f 'bitcoingui.cpp' || echo '$(srcdir)/'`bitcoingui.cpp

libbitcoinqt_a-bitcoingui.obj: bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoingui.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo -c -o libbitcoinqt_a-bitcoingui.obj `if test -f 'bitcoingui.cpp'; then $(CYGPATH_W) 'bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoingui.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoingui.Po
#	$(AM_V_CXX)source='bitcoingui.cpp' object='libbitcoinqt_a-bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoingui.obj `if test -f 'bitcoingui.cpp'; then $(CYGPATH_W) 'bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoingui.cpp'; fi`

libbitcoinqt_a-bitcoinunits.o: bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinunits.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo -c -o libbitcoinqt_a-bitcoinunits.o `test -f 'bitcoinunits.cpp' || echo '$(srcdir)/'`bitcoinunits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='bitcoinunits.cpp' object='libbitcoinqt_a-bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinunits.o `test -f 'bitcoinunits.cpp' || echo '$(srcdir)/'`bitcoinunits.cpp

libbitcoinqt_a-bitcoinunits.obj: bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-bitcoinunits.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo -c -o libbitcoinqt_a-bitcoinunits.obj `if test -f 'bitcoinunits.cpp'; then $(CYGPATH_W) 'bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Tpo $(DEPDIR)/libbitcoinqt_a-bitcoinunits.Po
#	$(AM_V_CXX)source='bitcoinunits.cpp' object='libbitcoinqt_a-bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-bitcoinunits.obj `if test -f 'bitcoinunits.cpp'; then $(CYGPATH_W) 'bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoinunits.cpp'; fi`

libbitcoinqt_a-clientmodel.o: clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-clientmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo -c -o libbitcoinqt_a-clientmodel.o `test -f 'clientmodel.cpp' || echo '$(srcdir)/'`clientmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo $(DEPDIR)/libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='clientmodel.cpp' object='libbitcoinqt_a-clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-clientmodel.o `test -f 'clientmodel.cpp' || echo '$(srcdir)/'`clientmodel.cpp

libbitcoinqt_a-clientmodel.obj: clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-clientmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo -c -o libbitcoinqt_a-clientmodel.obj `if test -f 'clientmodel.cpp'; then $(CYGPATH_W) 'clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-clientmodel.Tpo $(DEPDIR)/libbitcoinqt_a-clientmodel.Po
#	$(AM_V_CXX)source='clientmodel.cpp' object='libbitcoinqt_a-clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-clientmodel.obj `if test -f 'clientmodel.cpp'; then $(CYGPATH_W) 'clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/clientmodel.cpp'; fi`

libbitcoinqt_a-coincontroldialog.o: coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-coincontroldialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo -c -o libbitcoinqt_a-coincontroldialog.o `test -f 'coincontroldialog.cpp' || echo '$(srcdir)/'`coincontroldialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='coincontroldialog.cpp' object='libbitcoinqt_a-coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-coincontroldialog.o `test -f 'coincontroldialog.cpp' || echo '$(srcdir)/'`coincontroldialog.cpp

libbitcoinqt_a-coincontroldialog.obj: coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-coincontroldialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo -c -o libbitcoinqt_a-coincontroldialog.obj `if test -f 'coincontroldialog.cpp'; then $(CYGPATH_W) 'coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Tpo $(DEPDIR)/libbitcoinqt_a-coincontroldialog.Po
#	$(AM_V_CXX)source='coincontroldialog.cpp' object='libbitcoinqt_a-coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-coincontroldialog.obj `if test -f 'coincontroldialog.cpp'; then $(CYGPATH_W) 'coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/coincontroldialog.cpp'; fi`

libbitcoinqt_a-coincontroltreewidget.o: coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-coincontroltreewidget.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo -c -o libbitcoinqt_a-coincontroltreewidget.o `test -f 'coincontroltreewidget.cpp' || echo '$(srcdir)/'`coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='coincontroltreewidget.cpp' object='libbitcoinqt_a-coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-coincontroltreewidget.o `test -f 'coincontroltreewidget.cpp' || echo '$(srcdir)/'`coincontroltreewidget.cpp

libbitcoinqt_a-coincontroltreewidget.obj: coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-coincontroltreewidget.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo -c -o libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'coincontroltreewidget.cpp'; then $(CYGPATH_W) 'coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Tpo $(DEPDIR)/libbitcoinqt_a-coincontroltreewidget.Po
#	$(AM_V_CXX)source='coincontroltreewidget.cpp' object='libbitcoinqt_a-coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-coincontroltreewidget.obj `if test -f 'coincontroltreewidget.cpp'; then $(CYGPATH_W) 'coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/coincontroltreewidget.cpp'; fi`

libbitcoinqt_a-csvmodelwriter.o: csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-csvmodelwriter.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo -c -o libbitcoinqt_a-csvmodelwriter.o `test -f 'csvmodelwriter.cpp' || echo '$(srcdir)/'`csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='csvmodelwriter.cpp' object='libbitcoinqt_a-csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-csvmodelwriter.o `test -f 'csvmodelwriter.cpp' || echo '$(srcdir)/'`csvmodelwriter.cpp

libbitcoinqt_a-csvmodelwriter.obj: csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-csvmodelwriter.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo -c -o libbitcoinqt_a-csvmodelwriter.obj `if test -f 'csvmodelwriter.cpp'; then $(CYGPATH_W) 'csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Tpo $(DEPDIR)/libbitcoinqt_a-csvmodelwriter.Po
#	$(AM_V_CXX)source='csvmodelwriter.cpp' object='libbitcoinqt_a-csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-csvmodelwriter.obj `if test -f 'csvmodelwriter.cpp'; then $(CYGPATH_W) 'csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/csvmodelwriter.cpp'; fi`

libbitcoinqt_a-editaddressdialog.o: editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-editaddressdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo -c -o libbitcoinqt_a-editaddressdialog.o `test -f 'editaddressdialog.cpp' || echo '$(srcdir)/'`editaddressdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='editaddressdialog.cpp' object='libbitcoinqt_a-editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-editaddressdialog.o `test -f 'editaddressdialog.cpp' || echo '$(srcdir)/'`editaddressdialog.cpp

libbitcoinqt_a-editaddressdialog.obj: editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-editaddressdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo -c -o libbitcoinqt_a-editaddressdialog.obj `if test -f 'editaddressdialog.cpp'; then $(CYGPATH_W) 'editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Tpo $(DEPDIR)/libbitcoinqt_a-editaddressdialog.Po
#	$(AM_V_CXX)source='editaddressdialog.cpp' object='libbitcoinqt_a-editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-editaddressdialog.obj `if test -f 'editaddressdialog.cpp'; then $(CYGPATH_W) 'editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/editaddressdialog.cpp'; fi`

libbitcoinqt_a-guiutil.o: guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-guiutil.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-guiutil.Tpo -c -o libbitcoinqt_a-guiutil.o `test -f 'guiutil.cpp' || echo '$(srcdir)/'`guiutil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-guiutil.Tpo $(DEPDIR)/libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='guiutil.cpp' object='libbitcoinqt_a-guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-guiutil.o `test -f 'guiutil.cpp' || echo '$(srcdir)/'`guiutil.cpp

libbitcoinqt_a-guiutil.obj: guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-guiutil.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-guiutil.Tpo -c -o libbitcoinqt_a-guiutil.obj `if test -f 'guiutil.cpp'; then $(CYGPATH_W) 'guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-guiutil.Tpo $(DEPDIR)/libbitcoinqt_a-guiutil.Po
#	$(AM_V_CXX)source='guiutil.cpp' object='libbitcoinqt_a-guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-guiutil.obj `if test -f 'guiutil.cpp'; then $(CYGPATH_W) 'guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/guiutil.cpp'; fi`

libbitcoinqt_a-intro.o: intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-intro.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-intro.Tpo -c -o libbitcoinqt_a-intro.o `test -f 'intro.cpp' || echo '$(srcdir)/'`intro.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-intro.Tpo $(DEPDIR)/libbitcoinqt_a-intro.Po
#	$(AM_V_CXX)source='intro.cpp' object='libbitcoinqt_a-intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-intro.o `test -f 'intro.cpp' || echo '$(srcdir)/'`intro.cpp

libbitcoinqt_a-intro.obj: intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-intro.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-intro.Tpo -c -o libbitcoinqt_a-intro.obj `if test -f 'intro.cpp'; then $(CYGPATH_W) 'intro.cpp'; else $(CYGPATH_W) '$(srcdir)/intro.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-intro.Tpo $(DEPDIR)/libbitcoinqt_a-intro.Po
#	$(AM_V_CXX)source='intro.cpp' object='libbitcoinqt_a-intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-intro.obj `if test -f 'intro.cpp'; then $(CYGPATH_W) 'intro.cpp'; else $(CYGPATH_W) '$(srcdir)/intro.cpp'; fi`

libbitcoinqt_a-monitoreddatamapper.o: monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-monitoreddatamapper.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo -c -o libbitcoinqt_a-monitoreddatamapper.o `test -f 'monitoreddatamapper.cpp' || echo '$(srcdir)/'`monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='monitoreddatamapper.cpp' object='libbitcoinqt_a-monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-monitoreddatamapper.o `test -f 'monitoreddatamapper.cpp' || echo '$(srcdir)/'`monitoreddatamapper.cpp

libbitcoinqt_a-monitoreddatamapper.obj: monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-monitoreddatamapper.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo -c -o libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'monitoreddatamapper.cpp'; then $(CYGPATH_W) 'monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Tpo $(DEPDIR)/libbitcoinqt_a-monitoreddatamapper.Po
#	$(AM_V_CXX)source='monitoreddatamapper.cpp' object='libbitcoinqt_a-monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-monitoreddatamapper.obj `if test -f 'monitoreddatamapper.cpp'; then $(CYGPATH_W) 'monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/monitoreddatamapper.cpp'; fi`

libbitcoinqt_a-notificator.o: notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-notificator.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-notificator.Tpo -c -o libbitcoinqt_a-notificator.o `test -f 'notificator.cpp' || echo '$(srcdir)/'`notificator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-notificator.Tpo $(DEPDIR)/libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='notificator.cpp' object='libbitcoinqt_a-notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-notificator.o `test -f 'notificator.cpp' || echo '$(srcdir)/'`notificator.cpp

libbitcoinqt_a-notificator.obj: notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-notificator.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-notificator.Tpo -c -o libbitcoinqt_a-notificator.obj `if test -f 'notificator.cpp'; then $(CYGPATH_W) 'notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-notificator.Tpo $(DEPDIR)/libbitcoinqt_a-notificator.Po
#	$(AM_V_CXX)source='notificator.cpp' object='libbitcoinqt_a-notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-notificator.obj `if test -f 'notificator.cpp'; then $(CYGPATH_W) 'notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/notificator.cpp'; fi`

libbitcoinqt_a-openuridialog.o: openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-openuridialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-openuridialog.Tpo -c -o libbitcoinqt_a-openuridialog.o `test -f 'openuridialog.cpp' || echo '$(srcdir)/'`openuridialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-openuridialog.Tpo $(DEPDIR)/libbitcoinqt_a-openuridialog.Po
#	$(AM_V_CXX)source='openuridialog.cpp' object='libbitcoinqt_a-openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-openuridialog.o `test -f 'openuridialog.cpp' || echo '$(srcdir)/'`openuridialog.cpp

libbitcoinqt_a-openuridialog.obj: openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-openuridialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-openuridialog.Tpo -c -o libbitcoinqt_a-openuridialog.obj `if test -f 'openuridialog.cpp'; then $(CYGPATH_W) 'openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-openuridialog.Tpo $(DEPDIR)/libbitcoinqt_a-openuridialog.Po
#	$(AM_V_CXX)source='openuridialog.cpp' object='libbitcoinqt_a-openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-openuridialog.obj `if test -f 'openuridialog.cpp'; then $(CYGPATH_W) 'openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/openuridialog.cpp'; fi`

libbitcoinqt_a-optionsdialog.o: optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-optionsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo -c -o libbitcoinqt_a-optionsdialog.o `test -f 'optionsdialog.cpp' || echo '$(srcdir)/'`optionsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='optionsdialog.cpp' object='libbitcoinqt_a-optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-optionsdialog.o `test -f 'optionsdialog.cpp' || echo '$(srcdir)/'`optionsdialog.cpp

libbitcoinqt_a-optionsdialog.obj: optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-optionsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo -c -o libbitcoinqt_a-optionsdialog.obj `if test -f 'optionsdialog.cpp'; then $(CYGPATH_W) 'optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-optionsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-optionsdialog.Po
#	$(AM_V_CXX)source='optionsdialog.cpp' object='libbitcoinqt_a-optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-optionsdialog.obj `if test -f 'optionsdialog.cpp'; then $(CYGPATH_W) 'optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/optionsdialog.cpp'; fi`

libbitcoinqt_a-optionsmodel.o: optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-optionsmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo -c -o libbitcoinqt_a-optionsmodel.o `test -f 'optionsmodel.cpp' || echo '$(srcdir)/'`optionsmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo $(DEPDIR)/libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='optionsmodel.cpp' object='libbitcoinqt_a-optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-optionsmodel.o `test -f 'optionsmodel.cpp' || echo '$(srcdir)/'`optionsmodel.cpp

libbitcoinqt_a-optionsmodel.obj: optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-optionsmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo -c -o libbitcoinqt_a-optionsmodel.obj `if test -f 'optionsmodel.cpp'; then $(CYGPATH_W) 'optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-optionsmodel.Tpo $(DEPDIR)/libbitcoinqt_a-optionsmodel.Po
#	$(AM_V_CXX)source='optionsmodel.cpp' object='libbitcoinqt_a-optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-optionsmodel.obj `if test -f 'optionsmodel.cpp'; then $(CYGPATH_W) 'optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/optionsmodel.cpp'; fi`

libbitcoinqt_a-overviewpage.o: overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-overviewpage.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo -c -o libbitcoinqt_a-overviewpage.o `test -f 'overviewpage.cpp' || echo '$(srcdir)/'`overviewpage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo $(DEPDIR)/libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='overviewpage.cpp' object='libbitcoinqt_a-overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-overviewpage.o `test -f 'overviewpage.cpp' || echo '$(srcdir)/'`overviewpage.cpp

libbitcoinqt_a-overviewpage.obj: overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-overviewpage.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo -c -o libbitcoinqt_a-overviewpage.obj `if test -f 'overviewpage.cpp'; then $(CYGPATH_W) 'overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-overviewpage.Tpo $(DEPDIR)/libbitcoinqt_a-overviewpage.Po
#	$(AM_V_CXX)source='overviewpage.cpp' object='libbitcoinqt_a-overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-overviewpage.obj `if test -f 'overviewpage.cpp'; then $(CYGPATH_W) 'overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/overviewpage.cpp'; fi`

libbitcoinqt_a-paymentrequestplus.o: paymentrequestplus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentrequestplus.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Tpo -c -o libbitcoinqt_a-paymentrequestplus.o `test -f 'paymentrequestplus.cpp' || echo '$(srcdir)/'`paymentrequestplus.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Tpo $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Po
#	$(AM_V_CXX)source='paymentrequestplus.cpp' object='libbitcoinqt_a-paymentrequestplus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentrequestplus.o `test -f 'paymentrequestplus.cpp' || echo '$(srcdir)/'`paymentrequestplus.cpp

libbitcoinqt_a-paymentrequestplus.obj: paymentrequestplus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentrequestplus.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Tpo -c -o libbitcoinqt_a-paymentrequestplus.obj `if test -f 'paymentrequestplus.cpp'; then $(CYGPATH_W) 'paymentrequestplus.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentrequestplus.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Tpo $(DEPDIR)/libbitcoinqt_a-paymentrequestplus.Po
#	$(AM_V_CXX)source='paymentrequestplus.cpp' object='libbitcoinqt_a-paymentrequestplus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentrequestplus.obj `if test -f 'paymentrequestplus.cpp'; then $(CYGPATH_W) 'paymentrequestplus.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentrequestplus.cpp'; fi`

libbitcoinqt_a-paymentserver.o: paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentserver.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentserver.Tpo -c -o libbitcoinqt_a-paymentserver.o `test -f 'paymentserver.cpp' || echo '$(srcdir)/'`paymentserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentserver.Tpo $(DEPDIR)/libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='paymentserver.cpp' object='libbitcoinqt_a-paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentserver.o `test -f 'paymentserver.cpp' || echo '$(srcdir)/'`paymentserver.cpp

libbitcoinqt_a-paymentserver.obj: paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentserver.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentserver.Tpo -c -o libbitcoinqt_a-paymentserver.obj `if test -f 'paymentserver.cpp'; then $(CYGPATH_W) 'paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentserver.Tpo $(DEPDIR)/libbitcoinqt_a-paymentserver.Po
#	$(AM_V_CXX)source='paymentserver.cpp' object='libbitcoinqt_a-paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentserver.obj `if test -f 'paymentserver.cpp'; then $(CYGPATH_W) 'paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentserver.cpp'; fi`

libbitcoinqt_a-qvalidatedlineedit.o: qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qvalidatedlineedit.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qvalidatedlineedit.cpp' object='libbitcoinqt_a-qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qvalidatedlineedit.o `test -f 'qvalidatedlineedit.cpp' || echo '$(srcdir)/'`qvalidatedlineedit.cpp

libbitcoinqt_a-qvalidatedlineedit.obj: qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qvalidatedlineedit.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo -c -o libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Tpo $(DEPDIR)/libbitcoinqt_a-qvalidatedlineedit.Po
#	$(AM_V_CXX)source='qvalidatedlineedit.cpp' object='libbitcoinqt_a-qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qvalidatedlineedit.obj `if test -f 'qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/qvalidatedlineedit.cpp'; fi`

libbitcoinqt_a-qvaluecombobox.o: qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qvaluecombobox.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo -c -o libbitcoinqt_a-qvaluecombobox.o `test -f 'qvaluecombobox.cpp' || echo '$(srcdir)/'`qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qvaluecombobox.cpp' object='libbitcoinqt_a-qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qvaluecombobox.o `test -f 'qvaluecombobox.cpp' || echo '$(srcdir)/'`qvaluecombobox.cpp

libbitcoinqt_a-qvaluecombobox.obj: qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qvaluecombobox.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo -c -o libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qvaluecombobox.cpp'; then $(CYGPATH_W) 'qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Tpo $(DEPDIR)/libbitcoinqt_a-qvaluecombobox.Po
#	$(AM_V_CXX)source='qvaluecombobox.cpp' object='libbitcoinqt_a-qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qvaluecombobox.obj `if test -f 'qvaluecombobox.cpp'; then $(CYGPATH_W) 'qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/qvaluecombobox.cpp'; fi`

libbitcoinqt_a-receivecoinsdialog.o: receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-receivecoinsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Tpo -c -o libbitcoinqt_a-receivecoinsdialog.o `test -f 'receivecoinsdialog.cpp' || echo '$(srcdir)/'`receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='receivecoinsdialog.cpp' object='libbitcoinqt_a-receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-receivecoinsdialog.o `test -f 'receivecoinsdialog.cpp' || echo '$(srcdir)/'`receivecoinsdialog.cpp

libbitcoinqt_a-receivecoinsdialog.obj: receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-receivecoinsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Tpo -c -o libbitcoinqt_a-receivecoinsdialog.obj `if test -f 'receivecoinsdialog.cpp'; then $(CYGPATH_W) 'receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-receivecoinsdialog.Po
#	$(AM_V_CXX)source='receivecoinsdialog.cpp' object='libbitcoinqt_a-receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-receivecoinsdialog.obj `if test -f 'receivecoinsdialog.cpp'; then $(CYGPATH_W) 'receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/receivecoinsdialog.cpp'; fi`

libbitcoinqt_a-receiverequestdialog.o: receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-receiverequestdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Tpo -c -o libbitcoinqt_a-receiverequestdialog.o `test -f 'receiverequestdialog.cpp' || echo '$(srcdir)/'`receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Tpo $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='receiverequestdialog.cpp' object='libbitcoinqt_a-receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-receiverequestdialog.o `test -f 'receiverequestdialog.cpp' || echo '$(srcdir)/'`receiverequestdialog.cpp

libbitcoinqt_a-receiverequestdialog.obj: receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-receiverequestdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Tpo -c -o libbitcoinqt_a-receiverequestdialog.obj `if test -f 'receiverequestdialog.cpp'; then $(CYGPATH_W) 'receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Tpo $(DEPDIR)/libbitcoinqt_a-receiverequestdialog.Po
#	$(AM_V_CXX)source='receiverequestdialog.cpp' object='libbitcoinqt_a-receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-receiverequestdialog.obj `if test -f 'receiverequestdialog.cpp'; then $(CYGPATH_W) 'receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/receiverequestdialog.cpp'; fi`

libbitcoinqt_a-rpcconsole.o: rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-rpcconsole.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo -c -o libbitcoinqt_a-rpcconsole.o `test -f 'rpcconsole.cpp' || echo '$(srcdir)/'`rpcconsole.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo $(DEPDIR)/libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='rpcconsole.cpp' object='libbitcoinqt_a-rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-rpcconsole.o `test -f 'rpcconsole.cpp' || echo '$(srcdir)/'`rpcconsole.cpp

libbitcoinqt_a-rpcconsole.obj: rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-rpcconsole.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo -c -o libbitcoinqt_a-rpcconsole.obj `if test -f 'rpcconsole.cpp'; then $(CYGPATH_W) 'rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-rpcconsole.Tpo $(DEPDIR)/libbitcoinqt_a-rpcconsole.Po
#	$(AM_V_CXX)source='rpcconsole.cpp' object='libbitcoinqt_a-rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-rpcconsole.obj `if test -f 'rpcconsole.cpp'; then $(CYGPATH_W) 'rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/rpcconsole.cpp'; fi`

libbitcoinqt_a-sendcoinsdialog.o: sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-sendcoinsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo -c -o libbitcoinqt_a-sendcoinsdialog.o `test -f 'sendcoinsdialog.cpp' || echo '$(srcdir)/'`sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='sendcoinsdialog.cpp' object='libbitcoinqt_a-sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-sendcoinsdialog.o `test -f 'sendcoinsdialog.cpp' || echo '$(srcdir)/'`sendcoinsdialog.cpp

libbitcoinqt_a-sendcoinsdialog.obj: sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-sendcoinsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo -c -o libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'sendcoinsdialog.cpp'; then $(CYGPATH_W) 'sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-sendcoinsdialog.Po
#	$(AM_V_CXX)source='sendcoinsdialog.cpp' object='libbitcoinqt_a-sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-sendcoinsdialog.obj `if test -f 'sendcoinsdialog.cpp'; then $(CYGPATH_W) 'sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/sendcoinsdialog.cpp'; fi`

libbitcoinqt_a-sendcoinsentry.o: sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-sendcoinsentry.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo -c -o libbitcoinqt_a-sendcoinsentry.o `test -f 'sendcoinsentry.cpp' || echo '$(srcdir)/'`sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='sendcoinsentry.cpp' object='libbitcoinqt_a-sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-sendcoinsentry.o `test -f 'sendcoinsentry.cpp' || echo '$(srcdir)/'`sendcoinsentry.cpp

libbitcoinqt_a-sendcoinsentry.obj: sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-sendcoinsentry.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo -c -o libbitcoinqt_a-sendcoinsentry.obj `if test -f 'sendcoinsentry.cpp'; then $(CYGPATH_W) 'sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Tpo $(DEPDIR)/libbitcoinqt_a-sendcoinsentry.Po
#	$(AM_V_CXX)source='sendcoinsentry.cpp' object='libbitcoinqt_a-sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-sendcoinsentry.obj `if test -f 'sendcoinsentry.cpp'; then $(CYGPATH_W) 'sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/sendcoinsentry.cpp'; fi`

libbitcoinqt_a-signverifymessagedialog.o: signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-signverifymessagedialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo -c -o libbitcoinqt_a-signverifymessagedialog.o `test -f 'signverifymessagedialog.cpp' || echo '$(srcdir)/'`signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='signverifymessagedialog.cpp' object='libbitcoinqt_a-signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-signverifymessagedialog.o `test -f 'signverifymessagedialog.cpp' || echo '$(srcdir)/'`signverifymessagedialog.cpp

libbitcoinqt_a-signverifymessagedialog.obj: signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-signverifymessagedialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo -c -o libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'signverifymessagedialog.cpp'; then $(CYGPATH_W) 'signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Tpo $(DEPDIR)/libbitcoinqt_a-signverifymessagedialog.Po
#	$(AM_V_CXX)source='signverifymessagedialog.cpp' object='libbitcoinqt_a-signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-signverifymessagedialog.obj `if test -f 'signverifymessagedialog.cpp'; then $(CYGPATH_W) 'signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/signverifymessagedialog.cpp'; fi`

libbitcoinqt_a-splashscreen.o: splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-splashscreen.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-splashscreen.Tpo -c -o libbitcoinqt_a-splashscreen.o `test -f 'splashscreen.cpp' || echo '$(srcdir)/'`splashscreen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-splashscreen.Tpo $(DEPDIR)/libbitcoinqt_a-splashscreen.Po
#	$(AM_V_CXX)source='splashscreen.cpp' object='libbitcoinqt_a-splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-splashscreen.o `test -f 'splashscreen.cpp' || echo '$(srcdir)/'`splashscreen.cpp

libbitcoinqt_a-splashscreen.obj: splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-splashscreen.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-splashscreen.Tpo -c -o libbitcoinqt_a-splashscreen.obj `if test -f 'splashscreen.cpp'; then $(CYGPATH_W) 'splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-splashscreen.Tpo $(DEPDIR)/libbitcoinqt_a-splashscreen.Po
#	$(AM_V_CXX)source='splashscreen.cpp' object='libbitcoinqt_a-splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-splashscreen.obj `if test -f 'splashscreen.cpp'; then $(CYGPATH_W) 'splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/splashscreen.cpp'; fi`

libbitcoinqt_a-trafficgraphwidget.o: trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-trafficgraphwidget.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Tpo -c -o libbitcoinqt_a-trafficgraphwidget.o `test -f 'trafficgraphwidget.cpp' || echo '$(srcdir)/'`trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Tpo $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='trafficgraphwidget.cpp' object='libbitcoinqt_a-trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-trafficgraphwidget.o `test -f 'trafficgraphwidget.cpp' || echo '$(srcdir)/'`trafficgraphwidget.cpp

libbitcoinqt_a-trafficgraphwidget.obj: trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-trafficgraphwidget.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Tpo -c -o libbitcoinqt_a-trafficgraphwidget.obj `if test -f 'trafficgraphwidget.cpp'; then $(CYGPATH_W) 'trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Tpo $(DEPDIR)/libbitcoinqt_a-trafficgraphwidget.Po
#	$(AM_V_CXX)source='trafficgraphwidget.cpp' object='libbitcoinqt_a-trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-trafficgraphwidget.obj `if test -f 'trafficgraphwidget.cpp'; then $(CYGPATH_W) 'trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/trafficgraphwidget.cpp'; fi`

libbitcoinqt_a-transactiondesc.o: transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiondesc.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo -c -o libbitcoinqt_a-transactiondesc.o `test -f 'transactiondesc.cpp' || echo '$(srcdir)/'`transactiondesc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo $(DEPDIR)/libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='transactiondesc.cpp' object='libbitcoinqt_a-transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiondesc.o `test -f 'transactiondesc.cpp' || echo '$(srcdir)/'`transactiondesc.cpp

libbitcoinqt_a-transactiondesc.obj: transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiondesc.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo -c -o libbitcoinqt_a-transactiondesc.obj `if test -f 'transactiondesc.cpp'; then $(CYGPATH_W) 'transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiondesc.Tpo $(DEPDIR)/libbitcoinqt_a-transactiondesc.Po
#	$(AM_V_CXX)source='transactiondesc.cpp' object='libbitcoinqt_a-transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiondesc.obj `if test -f 'transactiondesc.cpp'; then $(CYGPATH_W) 'transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiondesc.cpp'; fi`

libbitcoinqt_a-transactiondescdialog.o: transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiondescdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo -c -o libbitcoinqt_a-transactiondescdialog.o `test -f 'transactiondescdialog.cpp' || echo '$(srcdir)/'`transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='transactiondescdialog.cpp' object='libbitcoinqt_a-transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiondescdialog.o `test -f 'transactiondescdialog.cpp' || echo '$(srcdir)/'`transactiondescdialog.cpp

libbitcoinqt_a-transactiondescdialog.obj: transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiondescdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo -c -o libbitcoinqt_a-transactiondescdialog.obj `if test -f 'transactiondescdialog.cpp'; then $(CYGPATH_W) 'transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Tpo $(DEPDIR)/libbitcoinqt_a-transactiondescdialog.Po
#	$(AM_V_CXX)source='transactiondescdialog.cpp' object='libbitcoinqt_a-transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiondescdialog.obj `if test -f 'transactiondescdialog.cpp'; then $(CYGPATH_W) 'transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiondescdialog.cpp'; fi`

libbitcoinqt_a-transactionfilterproxy.o: transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionfilterproxy.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo -c -o libbitcoinqt_a-transactionfilterproxy.o `test -f 'transactionfilterproxy.cpp' || echo '$(srcdir)/'`transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='transactionfilterproxy.cpp' object='libbitcoinqt_a-transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionfilterproxy.o `test -f 'transactionfilterproxy.cpp' || echo '$(srcdir)/'`transactionfilterproxy.cpp

libbitcoinqt_a-transactionfilterproxy.obj: transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionfilterproxy.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo -c -o libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'transactionfilterproxy.cpp'; then $(CYGPATH_W) 'transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Tpo $(DEPDIR)/libbitcoinqt_a-transactionfilterproxy.Po
#	$(AM_V_CXX)source='transactionfilterproxy.cpp' object='libbitcoinqt_a-transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionfilterproxy.obj `if test -f 'transactionfilterproxy.cpp'; then $(CYGPATH_W) 'transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionfilterproxy.cpp'; fi`

libbitcoinqt_a-transactionrecord.o: transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionrecord.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo -c -o libbitcoinqt_a-transactionrecord.o `test -f 'transactionrecord.cpp' || echo '$(srcdir)/'`transactionrecord.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo $(DEPDIR)/libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='transactionrecord.cpp' object='libbitcoinqt_a-transactionrecord.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionrecord.o `test -f 'transactionrecord.cpp' || echo '$(srcdir)/'`transactionrecord.cpp

libbitcoinqt_a-transactionrecord.obj: transactionrecord.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionrecord.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo -c -o libbitcoinqt_a-transactionrecord.obj `if test -f 'transactionrecord.cpp'; then $(CYGPATH_W) 'transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionrecord.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionrecord.Tpo $(DEPDIR)/libbitcoinqt_a-transactionrecord.Po
#	$(AM_V_CXX)source='transactionrecord.cpp' object='libbitcoinqt_a-transactionrecord.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionrecord.obj `if test -f 'transactionrecord.cpp'; then $(CYGPATH_W) 'transactionrecord.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionrecord.cpp'; fi`

libbitcoinqt_a-transactiontablemodel.o: transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiontablemodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo -c -o libbitcoinqt_a-transactiontablemodel.o `test -f 'transactiontablemodel.cpp' || echo '$(srcdir)/'`transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='transactiontablemodel.cpp' object='libbitcoinqt_a-transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiontablemodel.o `test -f 'transactiontablemodel.cpp' || echo '$(srcdir)/'`transactiontablemodel.cpp

libbitcoinqt_a-transactiontablemodel.obj: transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactiontablemodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo -c -o libbitcoinqt_a-transactiontablemodel.obj `if test -f 'transactiontablemodel.cpp'; then $(CYGPATH_W) 'transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-transactiontablemodel.Po
#	$(AM_V_CXX)source='transactiontablemodel.cpp' object='libbitcoinqt_a-transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactiontablemodel.obj `if test -f 'transactiontablemodel.cpp'; then $(CYGPATH_W) 'transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/transactiontablemodel.cpp'; fi`

libbitcoinqt_a-transactionview.o: transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionview.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionview.Tpo -c -o libbitcoinqt_a-transactionview.o `test -f 'transactionview.cpp' || echo '$(srcdir)/'`transactionview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionview.Tpo $(DEPDIR)/libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='transactionview.cpp' object='libbitcoinqt_a-transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionview.o `test -f 'transactionview.cpp' || echo '$(srcdir)/'`transactionview.cpp

libbitcoinqt_a-transactionview.obj: transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-transactionview.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-transactionview.Tpo -c -o libbitcoinqt_a-transactionview.obj `if test -f 'transactionview.cpp'; then $(CYGPATH_W) 'transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-transactionview.Tpo $(DEPDIR)/libbitcoinqt_a-transactionview.Po
#	$(AM_V_CXX)source='transactionview.cpp' object='libbitcoinqt_a-transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-transactionview.obj `if test -f 'transactionview.cpp'; then $(CYGPATH_W) 'transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/transactionview.cpp'; fi`

libbitcoinqt_a-walletframe.o: walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletframe.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletframe.Tpo -c -o libbitcoinqt_a-walletframe.o `test -f 'walletframe.cpp' || echo '$(srcdir)/'`walletframe.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletframe.Tpo $(DEPDIR)/libbitcoinqt_a-walletframe.Po
#	$(AM_V_CXX)source='walletframe.cpp' object='libbitcoinqt_a-walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletframe.o `test -f 'walletframe.cpp' || echo '$(srcdir)/'`walletframe.cpp

libbitcoinqt_a-walletframe.obj: walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletframe.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletframe.Tpo -c -o libbitcoinqt_a-walletframe.obj `if test -f 'walletframe.cpp'; then $(CYGPATH_W) 'walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletframe.Tpo $(DEPDIR)/libbitcoinqt_a-walletframe.Po
#	$(AM_V_CXX)source='walletframe.cpp' object='libbitcoinqt_a-walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletframe.obj `if test -f 'walletframe.cpp'; then $(CYGPATH_W) 'walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/walletframe.cpp'; fi`

libbitcoinqt_a-walletmodel.o: walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo -c -o libbitcoinqt_a-walletmodel.o `test -f 'walletmodel.cpp' || echo '$(srcdir)/'`walletmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo $(DEPDIR)/libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='walletmodel.cpp' object='libbitcoinqt_a-walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletmodel.o `test -f 'walletmodel.cpp' || echo '$(srcdir)/'`walletmodel.cpp

libbitcoinqt_a-walletmodel.obj: walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo -c -o libbitcoinqt_a-walletmodel.obj `if test -f 'walletmodel.cpp'; then $(CYGPATH_W) 'walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletmodel.Tpo $(DEPDIR)/libbitcoinqt_a-walletmodel.Po
#	$(AM_V_CXX)source='walletmodel.cpp' object='libbitcoinqt_a-walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletmodel.obj `if test -f 'walletmodel.cpp'; then $(CYGPATH_W) 'walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/walletmodel.cpp'; fi`

libbitcoinqt_a-walletmodeltransaction.o: walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletmodeltransaction.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Tpo -c -o libbitcoinqt_a-walletmodeltransaction.o `test -f 'walletmodeltransaction.cpp' || echo '$(srcdir)/'`walletmodeltransaction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Tpo $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='walletmodeltransaction.cpp' object='libbitcoinqt_a-walletmodeltransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletmodeltransaction.o `test -f 'walletmodeltransaction.cpp' || echo '$(srcdir)/'`walletmodeltransaction.cpp

libbitcoinqt_a-walletmodeltransaction.obj: walletmodeltransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletmodeltransaction.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Tpo -c -o libbitcoinqt_a-walletmodeltransaction.obj `if test -f 'walletmodeltransaction.cpp'; then $(CYGPATH_W) 'walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/walletmodeltransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Tpo $(DEPDIR)/libbitcoinqt_a-walletmodeltransaction.Po
#	$(AM_V_CXX)source='walletmodeltransaction.cpp' object='libbitcoinqt_a-walletmodeltransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletmodeltransaction.obj `if test -f 'walletmodeltransaction.cpp'; then $(CYGPATH_W) 'walletmodeltransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/walletmodeltransaction.cpp'; fi`

libbitcoinqt_a-walletview.o: walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletview.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletview.Tpo -c -o libbitcoinqt_a-walletview.o `test -f 'walletview.cpp' || echo '$(srcdir)/'`walletview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletview.Tpo $(DEPDIR)/libbitcoinqt_a-walletview.Po
#	$(AM_V_CXX)source='walletview.cpp' object='libbitcoinqt_a-walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletview.o `test -f 'walletview.cpp' || echo '$(srcdir)/'`walletview.cpp

libbitcoinqt_a-walletview.obj: walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-walletview.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-walletview.Tpo -c -o libbitcoinqt_a-walletview.obj `if test -f 'walletview.cpp'; then $(CYGPATH_W) 'walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-walletview.Tpo $(DEPDIR)/libbitcoinqt_a-walletview.Po
#	$(AM_V_CXX)source='walletview.cpp' object='libbitcoinqt_a-walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-walletview.obj `if test -f 'walletview.cpp'; then $(CYGPATH_W) 'walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/walletview.cpp'; fi`

libbitcoinqt_a-moc_aboutdialog.o: moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_aboutdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo -c -o libbitcoinqt_a-moc_aboutdialog.o `test -f 'moc_aboutdialog.cpp' || echo '$(srcdir)/'`moc_aboutdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='moc_aboutdialog.cpp' object='libbitcoinqt_a-moc_aboutdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_aboutdialog.o `test -f 'moc_aboutdialog.cpp' || echo '$(srcdir)/'`moc_aboutdialog.cpp

libbitcoinqt_a-moc_aboutdialog.obj: moc_aboutdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_aboutdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo -c -o libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'moc_aboutdialog.cpp'; then $(CYGPATH_W) 'moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_aboutdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_aboutdialog.Po
#	$(AM_V_CXX)source='moc_aboutdialog.cpp' object='libbitcoinqt_a-moc_aboutdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_aboutdialog.obj `if test -f 'moc_aboutdialog.cpp'; then $(CYGPATH_W) 'moc_aboutdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_aboutdialog.cpp'; fi`

libbitcoinqt_a-moc_addressbookpage.o: moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_addressbookpage.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo -c -o libbitcoinqt_a-moc_addressbookpage.o `test -f 'moc_addressbookpage.cpp' || echo '$(srcdir)/'`moc_addressbookpage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='moc_addressbookpage.cpp' object='libbitcoinqt_a-moc_addressbookpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_addressbookpage.o `test -f 'moc_addressbookpage.cpp' || echo '$(srcdir)/'`moc_addressbookpage.cpp

libbitcoinqt_a-moc_addressbookpage.obj: moc_addressbookpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_addressbookpage.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo -c -o libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'moc_addressbookpage.cpp'; then $(CYGPATH_W) 'moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addressbookpage.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Tpo $(DEPDIR)/libbitcoinqt_a-moc_addressbookpage.Po
#	$(AM_V_CXX)source='moc_addressbookpage.cpp' object='libbitcoinqt_a-moc_addressbookpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_addressbookpage.obj `if test -f 'moc_addressbookpage.cpp'; then $(CYGPATH_W) 'moc_addressbookpage.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addressbookpage.cpp'; fi`

libbitcoinqt_a-moc_addresstablemodel.o: moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_addresstablemodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o libbitcoinqt_a-moc_addresstablemodel.o `test -f 'moc_addresstablemodel.cpp' || echo '$(srcdir)/'`moc_addresstablemodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='moc_addresstablemodel.cpp' object='libbitcoinqt_a-moc_addresstablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_addresstablemodel.o `test -f 'moc_addresstablemodel.cpp' || echo '$(srcdir)/'`moc_addresstablemodel.cpp

libbitcoinqt_a-moc_addresstablemodel.obj: moc_addresstablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_addresstablemodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo -c -o libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addresstablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_addresstablemodel.Po
#	$(AM_V_CXX)source='moc_addresstablemodel.cpp' object='libbitcoinqt_a-moc_addresstablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_addresstablemodel.obj `if test -f 'moc_addresstablemodel.cpp'; then $(CYGPATH_W) 'moc_addresstablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_addresstablemodel.cpp'; fi`

libbitcoinqt_a-moc_askpassphrasedialog.o: moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_askpassphrasedialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`moc_askpassphrasedialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='moc_askpassphrasedialog.cpp' object='libbitcoinqt_a-moc_askpassphrasedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_askpassphrasedialog.o `test -f 'moc_askpassphrasedialog.cpp' || echo '$(srcdir)/'`moc_askpassphrasedialog.cpp

libbitcoinqt_a-moc_askpassphrasedialog.obj: moc_askpassphrasedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_askpassphrasedialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo -c -o libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_askpassphrasedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_askpassphrasedialog.Po
#	$(AM_V_CXX)source='moc_askpassphrasedialog.cpp' object='libbitcoinqt_a-moc_askpassphrasedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_askpassphrasedialog.obj `if test -f 'moc_askpassphrasedialog.cpp'; then $(CYGPATH_W) 'moc_askpassphrasedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_askpassphrasedialog.cpp'; fi`

libbitcoinqt_a-moc_bitcoinaddressvalidator.o: moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinaddressvalidator.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`moc_bitcoinaddressvalidator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='moc_bitcoinaddressvalidator.cpp' object='libbitcoinqt_a-moc_bitcoinaddressvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinaddressvalidator.o `test -f 'moc_bitcoinaddressvalidator.cpp' || echo '$(srcdir)/'`moc_bitcoinaddressvalidator.cpp

libbitcoinqt_a-moc_bitcoinaddressvalidator.obj: moc_bitcoinaddressvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinaddressvalidator.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo -c -o libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinaddressvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinaddressvalidator.Po
#	$(AM_V_CXX)source='moc_bitcoinaddressvalidator.cpp' object='libbitcoinqt_a-moc_bitcoinaddressvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinaddressvalidator.obj `if test -f 'moc_bitcoinaddressvalidator.cpp'; then $(CYGPATH_W) 'moc_bitcoinaddressvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinaddressvalidator.cpp'; fi`

libbitcoinqt_a-moc_bitcoinamountfield.o: moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinamountfield.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`moc_bitcoinamountfield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='moc_bitcoinamountfield.cpp' object='libbitcoinqt_a-moc_bitcoinamountfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinamountfield.o `test -f 'moc_bitcoinamountfield.cpp' || echo '$(srcdir)/'`moc_bitcoinamountfield.cpp

libbitcoinqt_a-moc_bitcoinamountfield.obj: moc_bitcoinamountfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinamountfield.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo -c -o libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinamountfield.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinamountfield.Po
#	$(AM_V_CXX)source='moc_bitcoinamountfield.cpp' object='libbitcoinqt_a-moc_bitcoinamountfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinamountfield.obj `if test -f 'moc_bitcoinamountfield.cpp'; then $(CYGPATH_W) 'moc_bitcoinamountfield.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinamountfield.cpp'; fi`

libbitcoinqt_a-moc_bitcoingui.o: moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoingui.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo -c -o libbitcoinqt_a-moc_bitcoingui.o `test -f 'moc_bitcoingui.cpp' || echo '$(srcdir)/'`moc_bitcoingui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='moc_bitcoingui.cpp' object='libbitcoinqt_a-moc_bitcoingui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoingui.o `test -f 'moc_bitcoingui.cpp' || echo '$(srcdir)/'`moc_bitcoingui.cpp

libbitcoinqt_a-moc_bitcoingui.obj: moc_bitcoingui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoingui.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo -c -o libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'moc_bitcoingui.cpp'; then $(CYGPATH_W) 'moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoingui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoingui.Po
#	$(AM_V_CXX)source='moc_bitcoingui.cpp' object='libbitcoinqt_a-moc_bitcoingui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoingui.obj `if test -f 'moc_bitcoingui.cpp'; then $(CYGPATH_W) 'moc_bitcoingui.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoingui.cpp'; fi`

libbitcoinqt_a-moc_bitcoinunits.o: moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinunits.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o libbitcoinqt_a-moc_bitcoinunits.o `test -f 'moc_bitcoinunits.cpp' || echo '$(srcdir)/'`moc_bitcoinunits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='moc_bitcoinunits.cpp' object='libbitcoinqt_a-moc_bitcoinunits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinunits.o `test -f 'moc_bitcoinunits.cpp' || echo '$(srcdir)/'`moc_bitcoinunits.cpp

libbitcoinqt_a-moc_bitcoinunits.obj: moc_bitcoinunits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_bitcoinunits.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo -c -o libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinunits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Tpo $(DEPDIR)/libbitcoinqt_a-moc_bitcoinunits.Po
#	$(AM_V_CXX)source='moc_bitcoinunits.cpp' object='libbitcoinqt_a-moc_bitcoinunits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_bitcoinunits.obj `if test -f 'moc_bitcoinunits.cpp'; then $(CYGPATH_W) 'moc_bitcoinunits.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_bitcoinunits.cpp'; fi`

libbitcoinqt_a-moc_clientmodel.o: moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_clientmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo -c -o libbitcoinqt_a-moc_clientmodel.o `test -f 'moc_clientmodel.cpp' || echo '$(srcdir)/'`moc_clientmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='moc_clientmodel.cpp' object='libbitcoinqt_a-moc_clientmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_clientmodel.o `test -f 'moc_clientmodel.cpp' || echo '$(srcdir)/'`moc_clientmodel.cpp

libbitcoinqt_a-moc_clientmodel.obj: moc_clientmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_clientmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo -c -o libbitcoinqt_a-moc_clientmodel.obj `if test -f 'moc_clientmodel.cpp'; then $(CYGPATH_W) 'moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_clientmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_clientmodel.Po
#	$(AM_V_CXX)source='moc_clientmodel.cpp' object='libbitcoinqt_a-moc_clientmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_clientmodel.obj `if test -f 'moc_clientmodel.cpp'; then $(CYGPATH_W) 'moc_clientmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_clientmodel.cpp'; fi`

libbitcoinqt_a-moc_coincontroldialog.o: moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_coincontroldialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o libbitcoinqt_a-moc_coincontroldialog.o `test -f 'moc_coincontroldialog.cpp' || echo '$(srcdir)/'`moc_coincontroldialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='moc_coincontroldialog.cpp' object='libbitcoinqt_a-moc_coincontroldialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_coincontroldialog.o `test -f 'moc_coincontroldialog.cpp' || echo '$(srcdir)/'`moc_coincontroldialog.cpp

libbitcoinqt_a-moc_coincontroldialog.obj: moc_coincontroldialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_coincontroldialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo -c -o libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_coincontroldialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_coincontroldialog.Po
#	$(AM_V_CXX)source='moc_coincontroldialog.cpp' object='libbitcoinqt_a-moc_coincontroldialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_coincontroldialog.obj `if test -f 'moc_coincontroldialog.cpp'; then $(CYGPATH_W) 'moc_coincontroldialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_coincontroldialog.cpp'; fi`

libbitcoinqt_a-moc_coincontroltreewidget.o: moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_coincontroltreewidget.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`moc_coincontroltreewidget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='moc_coincontroltreewidget.cpp' object='libbitcoinqt_a-moc_coincontroltreewidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_coincontroltreewidget.o `test -f 'moc_coincontroltreewidget.cpp' || echo '$(srcdir)/'`moc_coincontroltreewidget.cpp

libbitcoinqt_a-moc_coincontroltreewidget.obj: moc_coincontroltreewidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_coincontroltreewidget.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo -c -o libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_coincontroltreewidget.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Tpo $(DEPDIR)/libbitcoinqt_a-moc_coincontroltreewidget.Po
#	$(AM_V_CXX)source='moc_coincontroltreewidget.cpp' object='libbitcoinqt_a-moc_coincontroltreewidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_coincontroltreewidget.obj `if test -f 'moc_coincontroltreewidget.cpp'; then $(CYGPATH_W) 'moc_coincontroltreewidget.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_coincontroltreewidget.cpp'; fi`

libbitcoinqt_a-moc_csvmodelwriter.o: moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_csvmodelwriter.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`moc_csvmodelwriter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='moc_csvmodelwriter.cpp' object='libbitcoinqt_a-moc_csvmodelwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_csvmodelwriter.o `test -f 'moc_csvmodelwriter.cpp' || echo '$(srcdir)/'`moc_csvmodelwriter.cpp

libbitcoinqt_a-moc_csvmodelwriter.obj: moc_csvmodelwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_csvmodelwriter.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo -c -o libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_csvmodelwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Tpo $(DEPDIR)/libbitcoinqt_a-moc_csvmodelwriter.Po
#	$(AM_V_CXX)source='moc_csvmodelwriter.cpp' object='libbitcoinqt_a-moc_csvmodelwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_csvmodelwriter.obj `if test -f 'moc_csvmodelwriter.cpp'; then $(CYGPATH_W) 'moc_csvmodelwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_csvmodelwriter.cpp'; fi`

libbitcoinqt_a-moc_editaddressdialog.o: moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_editaddressdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o libbitcoinqt_a-moc_editaddressdialog.o `test -f 'moc_editaddressdialog.cpp' || echo '$(srcdir)/'`moc_editaddressdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='moc_editaddressdialog.cpp' object='libbitcoinqt_a-moc_editaddressdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_editaddressdialog.o `test -f 'moc_editaddressdialog.cpp' || echo '$(srcdir)/'`moc_editaddressdialog.cpp

libbitcoinqt_a-moc_editaddressdialog.obj: moc_editaddressdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_editaddressdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo -c -o libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_editaddressdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_editaddressdialog.Po
#	$(AM_V_CXX)source='moc_editaddressdialog.cpp' object='libbitcoinqt_a-moc_editaddressdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_editaddressdialog.obj `if test -f 'moc_editaddressdialog.cpp'; then $(CYGPATH_W) 'moc_editaddressdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_editaddressdialog.cpp'; fi`

libbitcoinqt_a-moc_guiutil.o: moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_guiutil.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo -c -o libbitcoinqt_a-moc_guiutil.o `test -f 'moc_guiutil.cpp' || echo '$(srcdir)/'`moc_guiutil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='moc_guiutil.cpp' object='libbitcoinqt_a-moc_guiutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_guiutil.o `test -f 'moc_guiutil.cpp' || echo '$(srcdir)/'`moc_guiutil.cpp

libbitcoinqt_a-moc_guiutil.obj: moc_guiutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_guiutil.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo -c -o libbitcoinqt_a-moc_guiutil.obj `if test -f 'moc_guiutil.cpp'; then $(CYGPATH_W) 'moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_guiutil.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Tpo $(DEPDIR)/libbitcoinqt_a-moc_guiutil.Po
#	$(AM_V_CXX)source='moc_guiutil.cpp' object='libbitcoinqt_a-moc_guiutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_guiutil.obj `if test -f 'moc_guiutil.cpp'; then $(CYGPATH_W) 'moc_guiutil.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_guiutil.cpp'; fi`

libbitcoinqt_a-moc_intro.o: moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_intro.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_intro.Tpo -c -o libbitcoinqt_a-moc_intro.o `test -f 'moc_intro.cpp' || echo '$(srcdir)/'`moc_intro.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_intro.Tpo $(DEPDIR)/libbitcoinqt_a-moc_intro.Po
#	$(AM_V_CXX)source='moc_intro.cpp' object='libbitcoinqt_a-moc_intro.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_intro.o `test -f 'moc_intro.cpp' || echo '$(srcdir)/'`moc_intro.cpp

libbitcoinqt_a-moc_intro.obj: moc_intro.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_intro.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_intro.Tpo -c -o libbitcoinqt_a-moc_intro.obj `if test -f 'moc_intro.cpp'; then $(CYGPATH_W) 'moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_intro.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_intro.Tpo $(DEPDIR)/libbitcoinqt_a-moc_intro.Po
#	$(AM_V_CXX)source='moc_intro.cpp' object='libbitcoinqt_a-moc_intro.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_intro.obj `if test -f 'moc_intro.cpp'; then $(CYGPATH_W) 'moc_intro.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_intro.cpp'; fi`

libbitcoinqt_a-moc_macdockiconhandler.o: moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_macdockiconhandler.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`moc_macdockiconhandler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='moc_macdockiconhandler.cpp' object='libbitcoinqt_a-moc_macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_macdockiconhandler.o `test -f 'moc_macdockiconhandler.cpp' || echo '$(srcdir)/'`moc_macdockiconhandler.cpp

libbitcoinqt_a-moc_macdockiconhandler.obj: moc_macdockiconhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_macdockiconhandler.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo -c -o libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_macdockiconhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Tpo $(DEPDIR)/libbitcoinqt_a-moc_macdockiconhandler.Po
#	$(AM_V_CXX)source='moc_macdockiconhandler.cpp' object='libbitcoinqt_a-moc_macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_macdockiconhandler.obj `if test -f 'moc_macdockiconhandler.cpp'; then $(CYGPATH_W) 'moc_macdockiconhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_macdockiconhandler.cpp'; fi`

libbitcoinqt_a-moc_macnotificationhandler.o: moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_macnotificationhandler.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`moc_macnotificationhandler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='moc_macnotificationhandler.cpp' object='libbitcoinqt_a-moc_macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_macnotificationhandler.o `test -f 'moc_macnotificationhandler.cpp' || echo '$(srcdir)/'`moc_macnotificationhandler.cpp

libbitcoinqt_a-moc_macnotificationhandler.obj: moc_macnotificationhandler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_macnotificationhandler.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo -c -o libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_macnotificationhandler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Tpo $(DEPDIR)/libbitcoinqt_a-moc_macnotificationhandler.Po
#	$(AM_V_CXX)source='moc_macnotificationhandler.cpp' object='libbitcoinqt_a-moc_macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_macnotificationhandler.obj `if test -f 'moc_macnotificationhandler.cpp'; then $(CYGPATH_W) 'moc_macnotificationhandler.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_macnotificationhandler.cpp'; fi`

libbitcoinqt_a-moc_monitoreddatamapper.o: moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_monitoreddatamapper.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`moc_monitoreddatamapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='moc_monitoreddatamapper.cpp' object='libbitcoinqt_a-moc_monitoreddatamapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_monitoreddatamapper.o `test -f 'moc_monitoreddatamapper.cpp' || echo '$(srcdir)/'`moc_monitoreddatamapper.cpp

libbitcoinqt_a-moc_monitoreddatamapper.obj: moc_monitoreddatamapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_monitoreddatamapper.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo -c -o libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_monitoreddatamapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Tpo $(DEPDIR)/libbitcoinqt_a-moc_monitoreddatamapper.Po
#	$(AM_V_CXX)source='moc_monitoreddatamapper.cpp' object='libbitcoinqt_a-moc_monitoreddatamapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_monitoreddatamapper.obj `if test -f 'moc_monitoreddatamapper.cpp'; then $(CYGPATH_W) 'moc_monitoreddatamapper.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_monitoreddatamapper.cpp'; fi`

libbitcoinqt_a-moc_notificator.o: moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_notificator.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo -c -o libbitcoinqt_a-moc_notificator.o `test -f 'moc_notificator.cpp' || echo '$(srcdir)/'`moc_notificator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo $(DEPDIR)/libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='moc_notificator.cpp' object='libbitcoinqt_a-moc_notificator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_notificator.o `test -f 'moc_notificator.cpp' || echo '$(srcdir)/'`moc_notificator.cpp

libbitcoinqt_a-moc_notificator.obj: moc_notificator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_notificator.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo -c -o libbitcoinqt_a-moc_notificator.obj `if test -f 'moc_notificator.cpp'; then $(CYGPATH_W) 'moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_notificator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_notificator.Tpo $(DEPDIR)/libbitcoinqt_a-moc_notificator.Po
#	$(AM_V_CXX)source='moc_notificator.cpp' object='libbitcoinqt_a-moc_notificator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_notificator.obj `if test -f 'moc_notificator.cpp'; then $(CYGPATH_W) 'moc_notificator.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_notificator.cpp'; fi`

libbitcoinqt_a-moc_openuridialog.o: moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_openuridialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Tpo -c -o libbitcoinqt_a-moc_openuridialog.o `test -f 'moc_openuridialog.cpp' || echo '$(srcdir)/'`moc_openuridialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='moc_openuridialog.cpp' object='libbitcoinqt_a-moc_openuridialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_openuridialog.o `test -f 'moc_openuridialog.cpp' || echo '$(srcdir)/'`moc_openuridialog.cpp

libbitcoinqt_a-moc_openuridialog.obj: moc_openuridialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_openuridialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Tpo -c -o libbitcoinqt_a-moc_openuridialog.obj `if test -f 'moc_openuridialog.cpp'; then $(CYGPATH_W) 'moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_openuridialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_openuridialog.Po
#	$(AM_V_CXX)source='moc_openuridialog.cpp' object='libbitcoinqt_a-moc_openuridialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_openuridialog.obj `if test -f 'moc_openuridialog.cpp'; then $(CYGPATH_W) 'moc_openuridialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_openuridialog.cpp'; fi`

libbitcoinqt_a-moc_optionsdialog.o: moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_optionsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo -c -o libbitcoinqt_a-moc_optionsdialog.o `test -f 'moc_optionsdialog.cpp' || echo '$(srcdir)/'`moc_optionsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='moc_optionsdialog.cpp' object='libbitcoinqt_a-moc_optionsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_optionsdialog.o `test -f 'moc_optionsdialog.cpp' || echo '$(srcdir)/'`moc_optionsdialog.cpp

libbitcoinqt_a-moc_optionsdialog.obj: moc_optionsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_optionsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo -c -o libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'moc_optionsdialog.cpp'; then $(CYGPATH_W) 'moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_optionsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_optionsdialog.Po
#	$(AM_V_CXX)source='moc_optionsdialog.cpp' object='libbitcoinqt_a-moc_optionsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_optionsdialog.obj `if test -f 'moc_optionsdialog.cpp'; then $(CYGPATH_W) 'moc_optionsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_optionsdialog.cpp'; fi`

libbitcoinqt_a-moc_optionsmodel.o: moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_optionsmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo -c -o libbitcoinqt_a-moc_optionsmodel.o `test -f 'moc_optionsmodel.cpp' || echo '$(srcdir)/'`moc_optionsmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='moc_optionsmodel.cpp' object='libbitcoinqt_a-moc_optionsmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_optionsmodel.o `test -f 'moc_optionsmodel.cpp' || echo '$(srcdir)/'`moc_optionsmodel.cpp

libbitcoinqt_a-moc_optionsmodel.obj: moc_optionsmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_optionsmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo -c -o libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'moc_optionsmodel.cpp'; then $(CYGPATH_W) 'moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_optionsmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_optionsmodel.Po
#	$(AM_V_CXX)source='moc_optionsmodel.cpp' object='libbitcoinqt_a-moc_optionsmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_optionsmodel.obj `if test -f 'moc_optionsmodel.cpp'; then $(CYGPATH_W) 'moc_optionsmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_optionsmodel.cpp'; fi`

libbitcoinqt_a-moc_overviewpage.o: moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_overviewpage.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo -c -o libbitcoinqt_a-moc_overviewpage.o `test -f 'moc_overviewpage.cpp' || echo '$(srcdir)/'`moc_overviewpage.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='moc_overviewpage.cpp' object='libbitcoinqt_a-moc_overviewpage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_overviewpage.o `test -f 'moc_overviewpage.cpp' || echo '$(srcdir)/'`moc_overviewpage.cpp

libbitcoinqt_a-moc_overviewpage.obj: moc_overviewpage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_overviewpage.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo -c -o libbitcoinqt_a-moc_overviewpage.obj `if test -f 'moc_overviewpage.cpp'; then $(CYGPATH_W) 'moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_overviewpage.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Tpo $(DEPDIR)/libbitcoinqt_a-moc_overviewpage.Po
#	$(AM_V_CXX)source='moc_overviewpage.cpp' object='libbitcoinqt_a-moc_overviewpage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_overviewpage.obj `if test -f 'moc_overviewpage.cpp'; then $(CYGPATH_W) 'moc_overviewpage.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_overviewpage.cpp'; fi`

libbitcoinqt_a-moc_paymentserver.o: moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_paymentserver.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Tpo -c -o libbitcoinqt_a-moc_paymentserver.o `test -f 'moc_paymentserver.cpp' || echo '$(srcdir)/'`moc_paymentserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Tpo $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='moc_paymentserver.cpp' object='libbitcoinqt_a-moc_paymentserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_paymentserver.o `test -f 'moc_paymentserver.cpp' || echo '$(srcdir)/'`moc_paymentserver.cpp

libbitcoinqt_a-moc_paymentserver.obj: moc_paymentserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_paymentserver.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Tpo -c -o libbitcoinqt_a-moc_paymentserver.obj `if test -f 'moc_paymentserver.cpp'; then $(CYGPATH_W) 'moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_paymentserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Tpo $(DEPDIR)/libbitcoinqt_a-moc_paymentserver.Po
#	$(AM_V_CXX)source='moc_paymentserver.cpp' object='libbitcoinqt_a-moc_paymentserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_paymentserver.obj `if test -f 'moc_paymentserver.cpp'; then $(CYGPATH_W) 'moc_paymentserver.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_paymentserver.cpp'; fi`

libbitcoinqt_a-moc_receiverequestdialog.o: moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_receiverequestdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Tpo -c -o libbitcoinqt_a-moc_receiverequestdialog.o `test -f 'moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`moc_receiverequestdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='moc_receiverequestdialog.cpp' object='libbitcoinqt_a-moc_receiverequestdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_receiverequestdialog.o `test -f 'moc_receiverequestdialog.cpp' || echo '$(srcdir)/'`moc_receiverequestdialog.cpp

libbitcoinqt_a-moc_receiverequestdialog.obj: moc_receiverequestdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_receiverequestdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Tpo -c -o libbitcoinqt_a-moc_receiverequestdialog.obj `if test -f 'moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_receiverequestdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_receiverequestdialog.Po
#	$(AM_V_CXX)source='moc_receiverequestdialog.cpp' object='libbitcoinqt_a-moc_receiverequestdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_receiverequestdialog.obj `if test -f 'moc_receiverequestdialog.cpp'; then $(CYGPATH_W) 'moc_receiverequestdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_receiverequestdialog.cpp'; fi`

libbitcoinqt_a-moc_qvalidatedlineedit.o: moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_qvalidatedlineedit.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`moc_qvalidatedlineedit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='moc_qvalidatedlineedit.cpp' object='libbitcoinqt_a-moc_qvalidatedlineedit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_qvalidatedlineedit.o `test -f 'moc_qvalidatedlineedit.cpp' || echo '$(srcdir)/'`moc_qvalidatedlineedit.cpp

libbitcoinqt_a-moc_qvalidatedlineedit.obj: moc_qvalidatedlineedit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_qvalidatedlineedit.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo -c -o libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_qvalidatedlineedit.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Tpo $(DEPDIR)/libbitcoinqt_a-moc_qvalidatedlineedit.Po
#	$(AM_V_CXX)source='moc_qvalidatedlineedit.cpp' object='libbitcoinqt_a-moc_qvalidatedlineedit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_qvalidatedlineedit.obj `if test -f 'moc_qvalidatedlineedit.cpp'; then $(CYGPATH_W) 'moc_qvalidatedlineedit.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_qvalidatedlineedit.cpp'; fi`

libbitcoinqt_a-moc_qvaluecombobox.o: moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_qvaluecombobox.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`moc_qvaluecombobox.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='moc_qvaluecombobox.cpp' object='libbitcoinqt_a-moc_qvaluecombobox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_qvaluecombobox.o `test -f 'moc_qvaluecombobox.cpp' || echo '$(srcdir)/'`moc_qvaluecombobox.cpp

libbitcoinqt_a-moc_qvaluecombobox.obj: moc_qvaluecombobox.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_qvaluecombobox.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo -c -o libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_qvaluecombobox.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Tpo $(DEPDIR)/libbitcoinqt_a-moc_qvaluecombobox.Po
#	$(AM_V_CXX)source='moc_qvaluecombobox.cpp' object='libbitcoinqt_a-moc_qvaluecombobox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_qvaluecombobox.obj `if test -f 'moc_qvaluecombobox.cpp'; then $(CYGPATH_W) 'moc_qvaluecombobox.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_qvaluecombobox.cpp'; fi`

libbitcoinqt_a-moc_receivecoinsdialog.o: moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_receivecoinsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Tpo -c -o libbitcoinqt_a-moc_receivecoinsdialog.o `test -f 'moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`moc_receivecoinsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='moc_receivecoinsdialog.cpp' object='libbitcoinqt_a-moc_receivecoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_receivecoinsdialog.o `test -f 'moc_receivecoinsdialog.cpp' || echo '$(srcdir)/'`moc_receivecoinsdialog.cpp

libbitcoinqt_a-moc_receivecoinsdialog.obj: moc_receivecoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_receivecoinsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Tpo -c -o libbitcoinqt_a-moc_receivecoinsdialog.obj `if test -f 'moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_receivecoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_receivecoinsdialog.Po
#	$(AM_V_CXX)source='moc_receivecoinsdialog.cpp' object='libbitcoinqt_a-moc_receivecoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_receivecoinsdialog.obj `if test -f 'moc_receivecoinsdialog.cpp'; then $(CYGPATH_W) 'moc_receivecoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_receivecoinsdialog.cpp'; fi`

libbitcoinqt_a-moc_rpcconsole.o: moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_rpcconsole.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo -c -o libbitcoinqt_a-moc_rpcconsole.o `test -f 'moc_rpcconsole.cpp' || echo '$(srcdir)/'`moc_rpcconsole.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='moc_rpcconsole.cpp' object='libbitcoinqt_a-moc_rpcconsole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_rpcconsole.o `test -f 'moc_rpcconsole.cpp' || echo '$(srcdir)/'`moc_rpcconsole.cpp

libbitcoinqt_a-moc_rpcconsole.obj: moc_rpcconsole.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_rpcconsole.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo -c -o libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'moc_rpcconsole.cpp'; then $(CYGPATH_W) 'moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_rpcconsole.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Tpo $(DEPDIR)/libbitcoinqt_a-moc_rpcconsole.Po
#	$(AM_V_CXX)source='moc_rpcconsole.cpp' object='libbitcoinqt_a-moc_rpcconsole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_rpcconsole.obj `if test -f 'moc_rpcconsole.cpp'; then $(CYGPATH_W) 'moc_rpcconsole.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_rpcconsole.cpp'; fi`

libbitcoinqt_a-moc_sendcoinsdialog.o: moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_sendcoinsdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`moc_sendcoinsdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='moc_sendcoinsdialog.cpp' object='libbitcoinqt_a-moc_sendcoinsdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_sendcoinsdialog.o `test -f 'moc_sendcoinsdialog.cpp' || echo '$(srcdir)/'`moc_sendcoinsdialog.cpp

libbitcoinqt_a-moc_sendcoinsdialog.obj: moc_sendcoinsdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_sendcoinsdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo -c -o libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sendcoinsdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsdialog.Po
#	$(AM_V_CXX)source='moc_sendcoinsdialog.cpp' object='libbitcoinqt_a-moc_sendcoinsdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_sendcoinsdialog.obj `if test -f 'moc_sendcoinsdialog.cpp'; then $(CYGPATH_W) 'moc_sendcoinsdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sendcoinsdialog.cpp'; fi`

libbitcoinqt_a-moc_sendcoinsentry.o: moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_sendcoinsentry.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`moc_sendcoinsentry.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='moc_sendcoinsentry.cpp' object='libbitcoinqt_a-moc_sendcoinsentry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_sendcoinsentry.o `test -f 'moc_sendcoinsentry.cpp' || echo '$(srcdir)/'`moc_sendcoinsentry.cpp

libbitcoinqt_a-moc_sendcoinsentry.obj: moc_sendcoinsentry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_sendcoinsentry.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo -c -o libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sendcoinsentry.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Tpo $(DEPDIR)/libbitcoinqt_a-moc_sendcoinsentry.Po
#	$(AM_V_CXX)source='moc_sendcoinsentry.cpp' object='libbitcoinqt_a-moc_sendcoinsentry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_sendcoinsentry.obj `if test -f 'moc_sendcoinsentry.cpp'; then $(CYGPATH_W) 'moc_sendcoinsentry.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_sendcoinsentry.cpp'; fi`

libbitcoinqt_a-moc_signverifymessagedialog.o: moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_signverifymessagedialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`moc_signverifymessagedialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='moc_signverifymessagedialog.cpp' object='libbitcoinqt_a-moc_signverifymessagedialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_signverifymessagedialog.o `test -f 'moc_signverifymessagedialog.cpp' || echo '$(srcdir)/'`moc_signverifymessagedialog.cpp

libbitcoinqt_a-moc_signverifymessagedialog.obj: moc_signverifymessagedialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_signverifymessagedialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo -c -o libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_signverifymessagedialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_signverifymessagedialog.Po
#	$(AM_V_CXX)source='moc_signverifymessagedialog.cpp' object='libbitcoinqt_a-moc_signverifymessagedialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_signverifymessagedialog.obj `if test -f 'moc_signverifymessagedialog.cpp'; then $(CYGPATH_W) 'moc_signverifymessagedialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_signverifymessagedialog.cpp'; fi`

libbitcoinqt_a-moc_splashscreen.o: moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_splashscreen.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Tpo -c -o libbitcoinqt_a-moc_splashscreen.o `test -f 'moc_splashscreen.cpp' || echo '$(srcdir)/'`moc_splashscreen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Tpo $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='moc_splashscreen.cpp' object='libbitcoinqt_a-moc_splashscreen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_splashscreen.o `test -f 'moc_splashscreen.cpp' || echo '$(srcdir)/'`moc_splashscreen.cpp

libbitcoinqt_a-moc_splashscreen.obj: moc_splashscreen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_splashscreen.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Tpo -c -o libbitcoinqt_a-moc_splashscreen.obj `if test -f 'moc_splashscreen.cpp'; then $(CYGPATH_W) 'moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_splashscreen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Tpo $(DEPDIR)/libbitcoinqt_a-moc_splashscreen.Po
#	$(AM_V_CXX)source='moc_splashscreen.cpp' object='libbitcoinqt_a-moc_splashscreen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_splashscreen.obj `if test -f 'moc_splashscreen.cpp'; then $(CYGPATH_W) 'moc_splashscreen.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_splashscreen.cpp'; fi`

libbitcoinqt_a-moc_trafficgraphwidget.o: moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_trafficgraphwidget.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Tpo -c -o libbitcoinqt_a-moc_trafficgraphwidget.o `test -f 'moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`moc_trafficgraphwidget.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Tpo $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='moc_trafficgraphwidget.cpp' object='libbitcoinqt_a-moc_trafficgraphwidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_trafficgraphwidget.o `test -f 'moc_trafficgraphwidget.cpp' || echo '$(srcdir)/'`moc_trafficgraphwidget.cpp

libbitcoinqt_a-moc_trafficgraphwidget.obj: moc_trafficgraphwidget.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_trafficgraphwidget.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Tpo -c -o libbitcoinqt_a-moc_trafficgraphwidget.obj `if test -f 'moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_trafficgraphwidget.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Tpo $(DEPDIR)/libbitcoinqt_a-moc_trafficgraphwidget.Po
#	$(AM_V_CXX)source='moc_trafficgraphwidget.cpp' object='libbitcoinqt_a-moc_trafficgraphwidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_trafficgraphwidget.obj `if test -f 'moc_trafficgraphwidget.cpp'; then $(CYGPATH_W) 'moc_trafficgraphwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_trafficgraphwidget.cpp'; fi`

libbitcoinqt_a-moc_transactiondesc.o: moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiondesc.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo -c -o libbitcoinqt_a-moc_transactiondesc.o `test -f 'moc_transactiondesc.cpp' || echo '$(srcdir)/'`moc_transactiondesc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='moc_transactiondesc.cpp' object='libbitcoinqt_a-moc_transactiondesc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiondesc.o `test -f 'moc_transactiondesc.cpp' || echo '$(srcdir)/'`moc_transactiondesc.cpp

libbitcoinqt_a-moc_transactiondesc.obj: moc_transactiondesc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiondesc.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo -c -o libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'moc_transactiondesc.cpp'; then $(CYGPATH_W) 'moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiondesc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiondesc.Po
#	$(AM_V_CXX)source='moc_transactiondesc.cpp' object='libbitcoinqt_a-moc_transactiondesc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiondesc.obj `if test -f 'moc_transactiondesc.cpp'; then $(CYGPATH_W) 'moc_transactiondesc.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiondesc.cpp'; fi`

libbitcoinqt_a-moc_transactiondescdialog.o: moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiondescdialog.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`moc_transactiondescdialog.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='moc_transactiondescdialog.cpp' object='libbitcoinqt_a-moc_transactiondescdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiondescdialog.o `test -f 'moc_transactiondescdialog.cpp' || echo '$(srcdir)/'`moc_transactiondescdialog.cpp

libbitcoinqt_a-moc_transactiondescdialog.obj: moc_transactiondescdialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiondescdialog.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo -c -o libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiondescdialog.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiondescdialog.Po
#	$(AM_V_CXX)source='moc_transactiondescdialog.cpp' object='libbitcoinqt_a-moc_transactiondescdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiondescdialog.obj `if test -f 'moc_transactiondescdialog.cpp'; then $(CYGPATH_W) 'moc_transactiondescdialog.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiondescdialog.cpp'; fi`

libbitcoinqt_a-moc_transactionfilterproxy.o: moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactionfilterproxy.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`moc_transactionfilterproxy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='moc_transactionfilterproxy.cpp' object='libbitcoinqt_a-moc_transactionfilterproxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactionfilterproxy.o `test -f 'moc_transactionfilterproxy.cpp' || echo '$(srcdir)/'`moc_transactionfilterproxy.cpp

libbitcoinqt_a-moc_transactionfilterproxy.obj: moc_transactionfilterproxy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactionfilterproxy.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo -c -o libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactionfilterproxy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactionfilterproxy.Po
#	$(AM_V_CXX)source='moc_transactionfilterproxy.cpp' object='libbitcoinqt_a-moc_transactionfilterproxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactionfilterproxy.obj `if test -f 'moc_transactionfilterproxy.cpp'; then $(CYGPATH_W) 'moc_transactionfilterproxy.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactionfilterproxy.cpp'; fi`

libbitcoinqt_a-moc_transactiontablemodel.o: moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiontablemodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`moc_transactiontablemodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='moc_transactiontablemodel.cpp' object='libbitcoinqt_a-moc_transactiontablemodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiontablemodel.o `test -f 'moc_transactiontablemodel.cpp' || echo '$(srcdir)/'`moc_transactiontablemodel.cpp

libbitcoinqt_a-moc_transactiontablemodel.obj: moc_transactiontablemodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactiontablemodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo -c -o libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiontablemodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactiontablemodel.Po
#	$(AM_V_CXX)source='moc_transactiontablemodel.cpp' object='libbitcoinqt_a-moc_transactiontablemodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactiontablemodel.obj `if test -f 'moc_transactiontablemodel.cpp'; then $(CYGPATH_W) 'moc_transactiontablemodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactiontablemodel.cpp'; fi`

libbitcoinqt_a-moc_transactionview.o: moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactionview.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo -c -o libbitcoinqt_a-moc_transactionview.o `test -f 'moc_transactionview.cpp' || echo '$(srcdir)/'`moc_transactionview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='moc_transactionview.cpp' object='libbitcoinqt_a-moc_transactionview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactionview.o `test -f 'moc_transactionview.cpp' || echo '$(srcdir)/'`moc_transactionview.cpp

libbitcoinqt_a-moc_transactionview.obj: moc_transactionview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_transactionview.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo -c -o libbitcoinqt_a-moc_transactionview.obj `if test -f 'moc_transactionview.cpp'; then $(CYGPATH_W) 'moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactionview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Tpo $(DEPDIR)/libbitcoinqt_a-moc_transactionview.Po
#	$(AM_V_CXX)source='moc_transactionview.cpp' object='libbitcoinqt_a-moc_transactionview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_transactionview.obj `if test -f 'moc_transactionview.cpp'; then $(CYGPATH_W) 'moc_transactionview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_transactionview.cpp'; fi`

libbitcoinqt_a-moc_walletframe.o: moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletframe.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Tpo -c -o libbitcoinqt_a-moc_walletframe.o `test -f 'moc_walletframe.cpp' || echo '$(srcdir)/'`moc_walletframe.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='moc_walletframe.cpp' object='libbitcoinqt_a-moc_walletframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletframe.o `test -f 'moc_walletframe.cpp' || echo '$(srcdir)/'`moc_walletframe.cpp

libbitcoinqt_a-moc_walletframe.obj: moc_walletframe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletframe.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Tpo -c -o libbitcoinqt_a-moc_walletframe.obj `if test -f 'moc_walletframe.cpp'; then $(CYGPATH_W) 'moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletframe.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletframe.Po
#	$(AM_V_CXX)source='moc_walletframe.cpp' object='libbitcoinqt_a-moc_walletframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletframe.obj `if test -f 'moc_walletframe.cpp'; then $(CYGPATH_W) 'moc_walletframe.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletframe.cpp'; fi`

libbitcoinqt_a-moc_walletmodel.o: moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletmodel.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo -c -o libbitcoinqt_a-moc_walletmodel.o `test -f 'moc_walletmodel.cpp' || echo '$(srcdir)/'`moc_walletmodel.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='moc_walletmodel.cpp' object='libbitcoinqt_a-moc_walletmodel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletmodel.o `test -f 'moc_walletmodel.cpp' || echo '$(srcdir)/'`moc_walletmodel.cpp

libbitcoinqt_a-moc_walletmodel.obj: moc_walletmodel.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletmodel.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo -c -o libbitcoinqt_a-moc_walletmodel.obj `if test -f 'moc_walletmodel.cpp'; then $(CYGPATH_W) 'moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletmodel.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletmodel.Po
#	$(AM_V_CXX)source='moc_walletmodel.cpp' object='libbitcoinqt_a-moc_walletmodel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletmodel.obj `if test -f 'moc_walletmodel.cpp'; then $(CYGPATH_W) 'moc_walletmodel.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletmodel.cpp'; fi`

libbitcoinqt_a-moc_walletview.o: moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletview.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletview.Tpo -c -o libbitcoinqt_a-moc_walletview.o `test -f 'moc_walletview.cpp' || echo '$(srcdir)/'`moc_walletview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletview.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='moc_walletview.cpp' object='libbitcoinqt_a-moc_walletview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletview.o `test -f 'moc_walletview.cpp' || echo '$(srcdir)/'`moc_walletview.cpp

libbitcoinqt_a-moc_walletview.obj: moc_walletview.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-moc_walletview.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-moc_walletview.Tpo -c -o libbitcoinqt_a-moc_walletview.obj `if test -f 'moc_walletview.cpp'; then $(CYGPATH_W) 'moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletview.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-moc_walletview.Tpo $(DEPDIR)/libbitcoinqt_a-moc_walletview.Po
#	$(AM_V_CXX)source='moc_walletview.cpp' object='libbitcoinqt_a-moc_walletview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-moc_walletview.obj `if test -f 'moc_walletview.cpp'; then $(CYGPATH_W) 'moc_walletview.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_walletview.cpp'; fi`

libbitcoinqt_a-paymentrequest.pb.o: paymentrequest.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentrequest.pb.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Tpo -c -o libbitcoinqt_a-paymentrequest.pb.o `test -f 'paymentrequest.pb.cc' || echo '$(srcdir)/'`paymentrequest.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Tpo $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Po
#	$(AM_V_CXX)source='paymentrequest.pb.cc' object='libbitcoinqt_a-paymentrequest.pb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentrequest.pb.o `test -f 'paymentrequest.pb.cc' || echo '$(srcdir)/'`paymentrequest.pb.cc

libbitcoinqt_a-paymentrequest.pb.obj: paymentrequest.pb.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-paymentrequest.pb.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Tpo -c -o libbitcoinqt_a-paymentrequest.pb.obj `if test -f 'paymentrequest.pb.cc'; then $(CYGPATH_W) 'paymentrequest.pb.cc'; else $(CYGPATH_W) '$(srcdir)/paymentrequest.pb.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Tpo $(DEPDIR)/libbitcoinqt_a-paymentrequest.pb.Po
#	$(AM_V_CXX)source='paymentrequest.pb.cc' object='libbitcoinqt_a-paymentrequest.pb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-paymentrequest.pb.obj `if test -f 'paymentrequest.pb.cc'; then $(CYGPATH_W) 'paymentrequest.pb.cc'; else $(CYGPATH_W) '$(srcdir)/paymentrequest.pb.cc'; fi`

libbitcoinqt_a-qrc_bitcoin.o: qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qrc_bitcoin.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo -c -o libbitcoinqt_a-qrc_bitcoin.o `test -f 'qrc_bitcoin.cpp' || echo '$(srcdir)/'`qrc_bitcoin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qrc_bitcoin.cpp' object='libbitcoinqt_a-qrc_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qrc_bitcoin.o `test -f 'qrc_bitcoin.cpp' || echo '$(srcdir)/'`qrc_bitcoin.cpp

libbitcoinqt_a-qrc_bitcoin.obj: qrc_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinqt_a-qrc_bitcoin.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo -c -o libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Tpo $(DEPDIR)/libbitcoinqt_a-qrc_bitcoin.Po
#	$(AM_V_CXX)source='qrc_bitcoin.cpp' object='libbitcoinqt_a-qrc_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinqt_a-qrc_bitcoin.obj `if test -f 'qrc_bitcoin.cpp'; then $(CYGPATH_W) 'qrc_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/qrc_bitcoin.cpp'; fi`

bitcoin_qt-bitcoin.o: bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_qt-bitcoin.o -MD -MP -MF $(DEPDIR)/bitcoin_qt-bitcoin.Tpo -c -o bitcoin_qt-bitcoin.o `test -f 'bitcoin.cpp' || echo '$(srcdir)/'`bitcoin.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_qt-bitcoin.Tpo $(DEPDIR)/bitcoin_qt-bitcoin.Po
#	$(AM_V_CXX)source='bitcoin.cpp' object='bitcoin_qt-bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_qt-bitcoin.o `test -f 'bitcoin.cpp' || echo '$(srcdir)/'`bitcoin.cpp

bitcoin_qt-bitcoin.obj: bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_qt-bitcoin.obj -MD -MP -MF $(DEPDIR)/bitcoin_qt-bitcoin.Tpo -c -o bitcoin_qt-bitcoin.obj `if test -f 'bitcoin.cpp'; then $(CYGPATH_W) 'bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_qt-bitcoin.Tpo $(DEPDIR)/bitcoin_qt-bitcoin.Po
#	$(AM_V_CXX)source='bitcoin.cpp' object='bitcoin_qt-bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_qt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_qt-bitcoin.obj `if test -f 'bitcoin.cpp'; then $(CYGPATH_W) 'bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.mm.obj:
	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libbitcoinqt_a-macdockiconhandler.o: macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libbitcoinqt_a-macdockiconhandler.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Tpo -c -o libbitcoinqt_a-macdockiconhandler.o `test -f 'macdockiconhandler.mm' || echo '$(srcdir)/'`macdockiconhandler.mm
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Tpo $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='macdockiconhandler.mm' object='libbitcoinqt_a-macdockiconhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libbitcoinqt_a-macdockiconhandler.o `test -f 'macdockiconhandler.mm' || echo '$(srcdir)/'`macdockiconhandler.mm

libbitcoinqt_a-macdockiconhandler.obj: macdockiconhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libbitcoinqt_a-macdockiconhandler.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Tpo -c -o libbitcoinqt_a-macdockiconhandler.obj `if test -f 'macdockiconhandler.mm'; then $(CYGPATH_W) 'macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/macdockiconhandler.mm'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Tpo $(DEPDIR)/libbitcoinqt_a-macdockiconhandler.Po
#	$(AM_V_OBJCXX)source='macdockiconhandler.mm' object='libbitcoinqt_a-macdockiconhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libbitcoinqt_a-macdockiconhandler.obj `if test -f 'macdockiconhandler.mm'; then $(CYGPATH_W) 'macdockiconhandler.mm'; else $(CYGPATH_W) '$(srcdir)/macdockiconhandler.mm'; fi`

libbitcoinqt_a-macnotificationhandler.o: macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libbitcoinqt_a-macnotificationhandler.o -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Tpo -c -o libbitcoinqt_a-macnotificationhandler.o `test -f 'macnotificationhandler.mm' || echo '$(srcdir)/'`macnotificationhandler.mm
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Tpo $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='macnotificationhandler.mm' object='libbitcoinqt_a-macnotificationhandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libbitcoinqt_a-macnotificationhandler.o `test -f 'macnotificationhandler.mm' || echo '$(srcdir)/'`macnotificationhandler.mm

libbitcoinqt_a-macnotificationhandler.obj: macnotificationhandler.mm
	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT libbitcoinqt_a-macnotificationhandler.obj -MD -MP -MF $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Tpo -c -o libbitcoinqt_a-macnotificationhandler.obj `if test -f 'macnotificationhandler.mm'; then $(CYGPATH_W) 'macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/macnotificationhandler.mm'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Tpo $(DEPDIR)/libbitcoinqt_a-macnotificationhandler.Po
#	$(AM_V_OBJCXX)source='macnotificationhandler.mm' object='libbitcoinqt_a-macnotificationhandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) \
#	$(AM_V_OBJCXX_no)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinqt_a_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o libbitcoinqt_a-macnotificationhandler.obj `if test -f 'macnotificationhandler.mm'; then $(CYGPATH_W) 'macnotificationhandler.mm'; else $(CYGPATH_W) '$(srcdir)/macnotificationhandler.mm'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f res/$(DEPDIR)/$(am__dirstamp)
	-rm -f res/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


$(LIBBITCOIN):
	$(MAKE) -C $(top_builddir)/src $(@F)

$(LIBLEVELDB) $(LIBMEMENV):
	$(MAKE) -C $(top_builddir)/src leveldb/$(@F)

$(LIBBITCOINQT):
	$(MAKE) -C $(top_builddir)/src/qt $(@F)

.mm.o:
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<

.rc.o:
	@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \
          echo error: could not build $@

ui_%.h: %.ui
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
 	@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@
	$(SED) -i.bak -e '/^\*\*.*Created:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak
	$(SED) -i.bak -e '/^\*\*.*by:/d' $(abs_builddir)/$@ && rm $(abs_builddir)/$@.bak

%.moc: %.cpp
 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -i.bak -e '/^\*\*.*Created:/d' $@ && rm $@.bak
	$(SED) -i.bak -e '/^\*\*.*by:/d' $@ && rm $@.bak

moc_%.cpp: %.h
 	QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<
	$(SED) -i.bak -e '/^\*\*.*Created:/d' $@ && rm $@.bak
	$(SED) -i.bak -e '/^\*\*.*by:/d' $@ && rm $@.bak

%.qm: %.ts
	@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)
 	@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \
	 echo error: could not build $(abs_builddir)/$@

%.pb.cc %.pb.h: %.proto
	test -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \
	  echo error: could not build $@

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.
$(QT_MOC): $(PROTOBUF_H)
$(QT_MOC_CPP): $(PROTOBUF_H)

.PHONY: FORCE
.SECONDARY: $(QT_QM)

bitcoinstrings.cpp: FORCE
	$(MAKE) -C $(top_srcdir)/src qt/bitcoinstrings.cpp

translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)
	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
 	@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts

$(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)
 	@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \
	  echo error: could not build $@
	$(SED) -i.bak -e '/^\*\*.*Created:/d' $@ && rm $@.bak
	$(SED) -i.bak -e '/^\*\*.*by:/d' $@ && rm $@.bak

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
